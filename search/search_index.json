{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":".projects li a { float: left; width: 130px; height: 20px; text-align: center; margin: 10px 30px; padding: 150px 0 30px 0; background-position: 0 50%; background-size: 130px auto; background-repeat: no-repeat; font-size: 120%; color: black; } .projects li { list-style: none; } Liferay Learn Welcome to Liferay Learn. Liferay Learn exists to organize, create, and curate resources for learning Liferay that are discoverable, readable, and practical. Liferay Projects Analytics Cloud Commerce DXP DXP Cloud Other Projects","title":"Home"},{"location":"#liferay-learn","text":"Welcome to Liferay Learn. Liferay Learn exists to organize, create, and curate resources for learning Liferay that are discoverable, readable, and practical.","title":"Liferay Learn"},{"location":"#liferay-projects","text":"Analytics Cloud Commerce DXP DXP Cloud Other Projects","title":"Liferay Projects"},{"location":"Analytics-Cloud/","text":"Welcome to Analytics Cloud Coming soon!","title":"Welcome to Analytics Cloud"},{"location":"Analytics-Cloud/#welcome-to-analytics-cloud","text":"Coming soon!","title":"Welcome to Analytics Cloud"},{"location":"Commerce/Welcome-to-Liferay-Commerce/","text":"Welcome to Liferay Commerce Liferay Commerce is a digital commerce platform built from the ground up to meet the challenging and complex needs of any B2B organization. Using the enterprise foundation of Liferay DXP, Liferay Commerce has the power and flexibility of fully integrated web content management and industry leading portal capabilities. To learn more about Liferay DXP see this article . Overview Modern Storefront Pages and Content Management Multi-Channel Catalog and Product Information Management B2B Focused Account Management and Purchasing Workflow Order Management and Sales ML Powered Recommendations and Alerts APIs and Integrations Next Steps Just want to get started? Launch Liferay Commerce fast with our Quick Start Guide . Modern Storefront Pages and Content Management Liferay Commerce includes a wide range of tools for setting up a storefront. New search tools, for instance, are designed specifically for product catalogs, while customizable widgets make it easy to add common UI elements\u2014such as Checkout and View Cart\u2014to a page. Learn more about Building a Storefront . Multi-Channel Catalog and Product Information Management Liferay Commerce contains a catalog management system that supports a variety of product types and stores a wide range of product data. Product options , pricing , images , and specifications are a few examples. Products are then readily available to a distribution channel of choice. Channels connect catalogs and products to any place products are sold: a Liferay Commerce based storefront, third party marketplaces, or even back office phone sales. Categories and Product Relationships simplify store navigation and increase revenue generating opportunities. Managing product pricing is flexible through the use of Price Lists and Tiered Pricing - all of which can be tailored to meet unique customer needs. B2B Focused Account Management and Purchasing Workflow Liferay Commerce is optimized for business-to-business transactions with features designed to address B2B needs. Accounts , Account Groups , and Account Roles work together to ensure that customer needs are met with tailored experiences, self-service, and purchasing workflows. Order Management and Sales Liferay Commerce offers Order Management that enables buyers and sellers to prepare, place, approve, transmit, and fulfill orders. Payments for orders may be completed with several different payment methods available out-of-the-box. Integration with more payment processors may be accomplished with additional customization. Orders may be fulfilled using several different shipping methods : sellers can impose a flat rate , apply shipping method restrictions , or integrate with the carrier rates like FedEx . ML Powered Recommendations and Alerts Liferay Commerce applies machine learning and predictive analytics to enable suggested product groups, order forecasting down to the product level, smart loyalty score alerts, and personalized product recommendations. APIs and Integrations Integrate with other business systems through a Mulesoft connector, Talend component, or using pre-built connectors for Salesforce, SAP ERP ( Coming Soon ), or MS Dynamics NAV ( Coming Soon ). Next Steps Quick Start Guide Store Setup Overview","title":"Welcome to Liferay Commerce"},{"location":"Commerce/Welcome-to-Liferay-Commerce/#welcome-to-liferay-commerce","text":"Liferay Commerce is a digital commerce platform built from the ground up to meet the challenging and complex needs of any B2B organization. Using the enterprise foundation of Liferay DXP, Liferay Commerce has the power and flexibility of fully integrated web content management and industry leading portal capabilities. To learn more about Liferay DXP see this article .","title":"Welcome to Liferay Commerce"},{"location":"Commerce/Welcome-to-Liferay-Commerce/#overview","text":"Modern Storefront Pages and Content Management Multi-Channel Catalog and Product Information Management B2B Focused Account Management and Purchasing Workflow Order Management and Sales ML Powered Recommendations and Alerts APIs and Integrations Next Steps Just want to get started? Launch Liferay Commerce fast with our Quick Start Guide .","title":"Overview"},{"location":"Commerce/Welcome-to-Liferay-Commerce/#modern-storefront-pages-and-content-management","text":"Liferay Commerce includes a wide range of tools for setting up a storefront. New search tools, for instance, are designed specifically for product catalogs, while customizable widgets make it easy to add common UI elements\u2014such as Checkout and View Cart\u2014to a page. Learn more about Building a Storefront .","title":"Modern Storefront Pages and Content Management"},{"location":"Commerce/Welcome-to-Liferay-Commerce/#multi-channel-catalog-and-product-information-management","text":"Liferay Commerce contains a catalog management system that supports a variety of product types and stores a wide range of product data. Product options , pricing , images , and specifications are a few examples. Products are then readily available to a distribution channel of choice. Channels connect catalogs and products to any place products are sold: a Liferay Commerce based storefront, third party marketplaces, or even back office phone sales. Categories and Product Relationships simplify store navigation and increase revenue generating opportunities. Managing product pricing is flexible through the use of Price Lists and Tiered Pricing - all of which can be tailored to meet unique customer needs.","title":"Multi-Channel Catalog and Product Information Management"},{"location":"Commerce/Welcome-to-Liferay-Commerce/#b2b-focused-account-management-and-purchasing-workflow","text":"Liferay Commerce is optimized for business-to-business transactions with features designed to address B2B needs. Accounts , Account Groups , and Account Roles work together to ensure that customer needs are met with tailored experiences, self-service, and purchasing workflows.","title":"B2B Focused Account Management and Purchasing Workflow"},{"location":"Commerce/Welcome-to-Liferay-Commerce/#order-management-and-sales","text":"Liferay Commerce offers Order Management that enables buyers and sellers to prepare, place, approve, transmit, and fulfill orders. Payments for orders may be completed with several different payment methods available out-of-the-box. Integration with more payment processors may be accomplished with additional customization. Orders may be fulfilled using several different shipping methods : sellers can impose a flat rate , apply shipping method restrictions , or integrate with the carrier rates like FedEx .","title":"Order Management and Sales"},{"location":"Commerce/Welcome-to-Liferay-Commerce/#ml-powered-recommendations-and-alerts","text":"Liferay Commerce applies machine learning and predictive analytics to enable suggested product groups, order forecasting down to the product level, smart loyalty score alerts, and personalized product recommendations.","title":"ML Powered Recommendations and Alerts"},{"location":"Commerce/Welcome-to-Liferay-Commerce/#apis-and-integrations","text":"Integrate with other business systems through a Mulesoft connector, Talend component, or using pre-built connectors for Salesforce, SAP ERP ( Coming Soon ), or MS Dynamics NAV ( Coming Soon ).","title":"APIs and Integrations"},{"location":"Commerce/Welcome-to-Liferay-Commerce/#next-steps","text":"Quick Start Guide Store Setup Overview","title":"Next Steps"},{"location":"Commerce/Developer-Guide/","text":"Introduction to the Liferay Commerce Developer Guide Welcome to the Liferay Commerce Developer Guide. This guide is divided into several sections: tutorials for customizing Liferay Commerce, API documentation, and additional reference materials. Jump to the section below most relevant to you for an introduction to the section. Getting Started Tutorials for Customizing Liferay Commerce Leveraging Liferay Commerce APIs Getting Started (TODO) Tutorials for Customizing Liferay Commerce Our tutorials are meant to quickly demonstrate working examples of custom modules that extend the features of Liferay Commerce. Each tutorial is comprised of the following elements: Building and deploying the sample, a review of the relevant implementation with code samples, and the final implementation of the sample itself. This will show you how to leverage various extension points to add to the base functionality however you see fit. You will be able to quickly delve into deploying sample modules for each of the available extension points. You will then be able to walk through the steps to build it yourself with your own customizations. Leveraging Liferay Commerce APIs (TODO)","title":"Introduction to the Liferay Commerce Developer Guide"},{"location":"Commerce/Developer-Guide/#introduction-to-the-liferay-commerce-developer-guide","text":"Welcome to the Liferay Commerce Developer Guide. This guide is divided into several sections: tutorials for customizing Liferay Commerce, API documentation, and additional reference materials. Jump to the section below most relevant to you for an introduction to the section. Getting Started Tutorials for Customizing Liferay Commerce Leveraging Liferay Commerce APIs","title":"Introduction to the Liferay Commerce Developer Guide"},{"location":"Commerce/Developer-Guide/#getting-started","text":"(TODO)","title":"Getting Started"},{"location":"Commerce/Developer-Guide/#tutorials-for-customizing-liferay-commerce","text":"Our tutorials are meant to quickly demonstrate working examples of custom modules that extend the features of Liferay Commerce. Each tutorial is comprised of the following elements: Building and deploying the sample, a review of the relevant implementation with code samples, and the final implementation of the sample itself. This will show you how to leverage various extension points to add to the base functionality however you see fit. You will be able to quickly delve into deploying sample modules for each of the available extension points. You will then be able to walk through the steps to build it yourself with your own customizations.","title":"Tutorials for Customizing Liferay Commerce"},{"location":"Commerce/Developer-Guide/#leveraging-liferay-commerce-apis","text":"(TODO)","title":"Leveraging Liferay Commerce APIs"},{"location":"Commerce/Developer-Guide/tutorials/adding-a-new-product-type/","text":"Adding a New Product Type This tutorial will show you how to add a new product type by implementing three interfaces: CPType , ScreenNavigationCategory , and ScreenNavigationEntry . Product types can be used to group products that share similar characteristics. Liferay Commerce provides three product types out-of-the-box: Simple , Grouped , and Virtual . Overview Deploy an Example Walk Through the Example Additional Information Deploy an Example In this section, we will get an example product type up and running on your instance of Liferay Commerce. Follow these steps: Start Liferay Commerce. bash docker run -it -p 8080:8080 liferay/commerce:2.0.4 Download and unzip Acme Commerce Product Type . bash curl liferay-c1n4.zip bash unzip liferay-c1n4.zip Go to liferay-c1n4 . bash cd liferay-c1n4 Build and deploy the example. bash ./gradlew deploy -Ddeploy.docker.container.id=$(docker ps -lq) Note: This command is the same as copying the deployed jars to /opt/liferay/osgi/modules on the Docker container. Confirm the deployment in the Liferay Docker container console. bash STARTED com.acme.c1n4.web_1.0.0 Verify that the example product type was added. Open your browser to https://localhost:8080 and navigate to Control Panel \u2192 Commerce \u2192 Products . Then, click on the (+) icon to add a new product. The new product type (\"Example\") will be present in the list of types to choose from. Congratulations, you've successfully built and deployed a new product type that implements CPType . Next, let's dive deeper to learn more. Walk Through the Example In this section, we will review the example we deployed. We will create two classes: a product type class and a screen navigation entry class for a custom screen. Walk through the following: Annotate the Product Type Class for OSGi Registration Review the CPType Interface Annotate the Screen Navigation Entry Class for OSGi Registration Review the ScreenNavigationCategory Interface Review the ScreenNavigationEntry Interface Complete the Product Type Annotate the Product Type Class for OSGi Registration Our product type class implements the CPType interface: @Component( immediate = true, property = { \"commerce.product.type.display.order:Integer=16\", \"commerce.product.type.name=\" + C1N4CPType.NAME }, service = CPType.class ) public class C1N4CPType implements CPType { public static final String NAME = \"Example\"; The product type name must be a unique value so that Liferay Commerce can distinguish our product type from existing product types. The commerce.product.type.display.order value indicates how far into the list of product types our product type will appear in the UI. For example, the virtual product type has a value of 15. Giving our product type a value of 16 ensures that it will appear immediately after the virtual type. Review the CPType Interface Implement the following methods of CPType in the product type class: public void deleteCPDefinition(long cpDefinitionId) throws PortalException; This method is where any custom deletion logic for the product type will be added. public String getLabel(Locale locale); This returns a text label that describes the product type. See the implementation in C1N4CPType.java for a reference in retrieving the label with a language key. public String getName(); This returns the name of our product type. This name may be a language key that corresponds to the name that will appear in the UI. Annotate the Screen Navigation Entry Class for OSGi Registration Our screen navigation entry class implements both the ScreenNavigationCategory and ScreenNavigationEntry interfaces: @Component( property = { \"screen.navigation.category.order:Integer=11\", \"screen.navigation.entry.order:Integer=11\" }, service = {ScreenNavigationCategory.class, ScreenNavigationEntry.class} ) public class C1N4ScreenNavigationEntry implements ScreenNavigationCategory, ScreenNavigationEntry<CPDefinition> { public static final String KEY = \"Example\"; It is important to provide a distinct key for the navigation screen class so that Liferay Commerce can distinguish it as a separate screen from the existing screens. Reusing a key that is already in use will override the existing associated navigation screen. The screen.navigation.category.order and screen.navigation.entry.order values determine what position in the product type screens this screen will appear. For example, the Details screen class has these values set to 10; setting them to 11 will ensure that our custom screen appears after it in the list. Review the ScreenNavigationCategory Interface Implement the following methods in the screen navigation entry class: public String getCategoryKey(); This returns a unique identifier for the category used for the screen navigation entry. public String getLabel(Locale var1); This returns a text label for the screen navigation entry that will be displayed in the UI. See the implementation in C1N4ScreenNavigationEntry.java for a reference in retrieving the label with a language key. public String getScreenNavigationKey(); This returns a key to indicate where our screen should appear in Liferay. Return the string value \"cp.definition.general\" so it properly appears among the other screens for products. Review the ScreenNavigationEntry Interface Continue to build on the screen navigation entry class with the following methods: String getCategoryKey(); This returns a unique identifier for the screen navigation category used by our screen. String getEntryKey(); This returns a unique identifier for the screen navigation entry. It returns the same value as getCategoryKey . String getScreenNavigationKey(); This is the same method as getScreenNavigationKey for the ScreenNavigationCategory interface. We implemented this method by returning the string value \"cp.definition.general\" . void render( HttpServletRequest var1, HttpServletResponse var2) throws IOException; This is where we add the code to render a customized screen for our product type. Complete the Product Type The product type is comprised of backend logic for deleting the product, logic to render the screen in the navigation menu, and the custom screen itself. Do the following: Configure the ServletContext for the module. Implement the ScreenNavigationEntry 's render method. Override the ScreenNavigationEntry 's isVisible method. Add the product type deletion logic to deleteCPDefinition . Add a JSP to render the custom screen. Add the language key to Language.properties . Configure the ServletContext for the Module Define the ServletContext in our ScreenNavigationEntry class using the symbolic name of our bundle so that it can find the JSP in our module: @Reference(target = \"(osgi.web.symbolicname=com.acme.c1n4.web)\") private ServletContext _servletContext; The value we set for osgi.web.symbolicname matches the value for Bundle-SymbolicName in our bnd.bnd file . These values must match for the ServletContext to locate the JSP. We declare a unique value for Web-ContextPath in our bnd.bnd file so the ServletContext is correctly generated. In our example, Web-ContextPath is set to /c1n4-web . See bnd.bnd for a reference on these values. Implement the ScreenNavigationEntry 's render Method @Override public void render( HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse) throws IOException { _jspRenderer.renderJSP( _servletContext, httpServletRequest, httpServletResponse, \"/edit_product.jsp\"); } Use a JSPRenderer to render the JSP for our product type's custom screen (in our example, edit_product.jsp ). Provide the ServletContext as a parameter to find the JSP we have created. Override the ScreenNavigationEntry 's isVisible Method @Override public boolean isVisible(User user, CPDefinition context) { if (context == null) { return false; } String productTypeName = context.getProductTypeName(); if (productTypeName.equals(getCategoryKey())) { return true; } return false; } Implement logic here to determine when to show the custom screen. In our example, we only check whether the product type from the CPDefinition matches our example product type. Add the Product Type Deletion Logic to deleteCPDefinition Our example does not require any logic to be added to deleteCPDefinition . Add a JSP to Render the Custom Screen In our example, we are adding a JSP with a text field. <%@ taglib uri=\"http://liferay.com/tld/aui\" prefix=\"aui\" %> <aui:input name=\"exampleInput\" type=\"text\" /> Implement any other inputs or actions desired on the custom screen here, such as a form or MVC action command. See MVC Action Command for more information on adding an MVC action command that can be accessed from the JSP. Add the Language Key to Language.properties Add the language key and its value to a Language.properties file within our module: example=Example See Localizing Your Application for more information. Conclusion Congratulations! You now know the basics for implementing the CPType interface, and have implemented a new product type with its own custom screen to Liferay Commerce. Additional Information Introduction to Product Types Localizing Your Application","title":"Adding a New Product Type"},{"location":"Commerce/Developer-Guide/tutorials/adding-a-new-product-type/#adding-a-new-product-type","text":"This tutorial will show you how to add a new product type by implementing three interfaces: CPType , ScreenNavigationCategory , and ScreenNavigationEntry . Product types can be used to group products that share similar characteristics. Liferay Commerce provides three product types out-of-the-box: Simple , Grouped , and Virtual .","title":"Adding a New Product Type"},{"location":"Commerce/Developer-Guide/tutorials/adding-a-new-product-type/#overview","text":"Deploy an Example Walk Through the Example Additional Information","title":"Overview"},{"location":"Commerce/Developer-Guide/tutorials/adding-a-new-product-type/#deploy-an-example","text":"In this section, we will get an example product type up and running on your instance of Liferay Commerce. Follow these steps: Start Liferay Commerce. bash docker run -it -p 8080:8080 liferay/commerce:2.0.4 Download and unzip Acme Commerce Product Type . bash curl liferay-c1n4.zip bash unzip liferay-c1n4.zip Go to liferay-c1n4 . bash cd liferay-c1n4 Build and deploy the example. bash ./gradlew deploy -Ddeploy.docker.container.id=$(docker ps -lq) Note: This command is the same as copying the deployed jars to /opt/liferay/osgi/modules on the Docker container. Confirm the deployment in the Liferay Docker container console. bash STARTED com.acme.c1n4.web_1.0.0 Verify that the example product type was added. Open your browser to https://localhost:8080 and navigate to Control Panel \u2192 Commerce \u2192 Products . Then, click on the (+) icon to add a new product. The new product type (\"Example\") will be present in the list of types to choose from. Congratulations, you've successfully built and deployed a new product type that implements CPType . Next, let's dive deeper to learn more.","title":"Deploy an Example"},{"location":"Commerce/Developer-Guide/tutorials/adding-a-new-product-type/#walk-through-the-example","text":"In this section, we will review the example we deployed. We will create two classes: a product type class and a screen navigation entry class for a custom screen. Walk through the following: Annotate the Product Type Class for OSGi Registration Review the CPType Interface Annotate the Screen Navigation Entry Class for OSGi Registration Review the ScreenNavigationCategory Interface Review the ScreenNavigationEntry Interface Complete the Product Type","title":"Walk Through the Example"},{"location":"Commerce/Developer-Guide/tutorials/adding-a-new-product-type/#annotate-the-product-type-class-for-osgi-registration","text":"Our product type class implements the CPType interface: @Component( immediate = true, property = { \"commerce.product.type.display.order:Integer=16\", \"commerce.product.type.name=\" + C1N4CPType.NAME }, service = CPType.class ) public class C1N4CPType implements CPType { public static final String NAME = \"Example\"; The product type name must be a unique value so that Liferay Commerce can distinguish our product type from existing product types. The commerce.product.type.display.order value indicates how far into the list of product types our product type will appear in the UI. For example, the virtual product type has a value of 15. Giving our product type a value of 16 ensures that it will appear immediately after the virtual type.","title":"Annotate the Product Type Class for OSGi Registration"},{"location":"Commerce/Developer-Guide/tutorials/adding-a-new-product-type/#review-the-cptype-interface","text":"Implement the following methods of CPType in the product type class: public void deleteCPDefinition(long cpDefinitionId) throws PortalException; This method is where any custom deletion logic for the product type will be added. public String getLabel(Locale locale); This returns a text label that describes the product type. See the implementation in C1N4CPType.java for a reference in retrieving the label with a language key. public String getName(); This returns the name of our product type. This name may be a language key that corresponds to the name that will appear in the UI.","title":"Review the CPType Interface"},{"location":"Commerce/Developer-Guide/tutorials/adding-a-new-product-type/#annotate-the-screen-navigation-entry-class-for-osgi-registration","text":"Our screen navigation entry class implements both the ScreenNavigationCategory and ScreenNavigationEntry interfaces: @Component( property = { \"screen.navigation.category.order:Integer=11\", \"screen.navigation.entry.order:Integer=11\" }, service = {ScreenNavigationCategory.class, ScreenNavigationEntry.class} ) public class C1N4ScreenNavigationEntry implements ScreenNavigationCategory, ScreenNavigationEntry<CPDefinition> { public static final String KEY = \"Example\"; It is important to provide a distinct key for the navigation screen class so that Liferay Commerce can distinguish it as a separate screen from the existing screens. Reusing a key that is already in use will override the existing associated navigation screen. The screen.navigation.category.order and screen.navigation.entry.order values determine what position in the product type screens this screen will appear. For example, the Details screen class has these values set to 10; setting them to 11 will ensure that our custom screen appears after it in the list.","title":"Annotate the Screen Navigation Entry Class for OSGi Registration"},{"location":"Commerce/Developer-Guide/tutorials/adding-a-new-product-type/#review-the-screennavigationcategory-interface","text":"Implement the following methods in the screen navigation entry class: public String getCategoryKey(); This returns a unique identifier for the category used for the screen navigation entry. public String getLabel(Locale var1); This returns a text label for the screen navigation entry that will be displayed in the UI. See the implementation in C1N4ScreenNavigationEntry.java for a reference in retrieving the label with a language key. public String getScreenNavigationKey(); This returns a key to indicate where our screen should appear in Liferay. Return the string value \"cp.definition.general\" so it properly appears among the other screens for products.","title":"Review the ScreenNavigationCategory Interface"},{"location":"Commerce/Developer-Guide/tutorials/adding-a-new-product-type/#review-the-screennavigationentry-interface","text":"Continue to build on the screen navigation entry class with the following methods: String getCategoryKey(); This returns a unique identifier for the screen navigation category used by our screen. String getEntryKey(); This returns a unique identifier for the screen navigation entry. It returns the same value as getCategoryKey . String getScreenNavigationKey(); This is the same method as getScreenNavigationKey for the ScreenNavigationCategory interface. We implemented this method by returning the string value \"cp.definition.general\" . void render( HttpServletRequest var1, HttpServletResponse var2) throws IOException; This is where we add the code to render a customized screen for our product type.","title":"Review the ScreenNavigationEntry Interface"},{"location":"Commerce/Developer-Guide/tutorials/adding-a-new-product-type/#complete-the-product-type","text":"The product type is comprised of backend logic for deleting the product, logic to render the screen in the navigation menu, and the custom screen itself. Do the following: Configure the ServletContext for the module. Implement the ScreenNavigationEntry 's render method. Override the ScreenNavigationEntry 's isVisible method. Add the product type deletion logic to deleteCPDefinition . Add a JSP to render the custom screen. Add the language key to Language.properties .","title":"Complete the Product Type"},{"location":"Commerce/Developer-Guide/tutorials/adding-a-new-product-type/#configure-the-servletcontext-for-the-module","text":"Define the ServletContext in our ScreenNavigationEntry class using the symbolic name of our bundle so that it can find the JSP in our module: @Reference(target = \"(osgi.web.symbolicname=com.acme.c1n4.web)\") private ServletContext _servletContext; The value we set for osgi.web.symbolicname matches the value for Bundle-SymbolicName in our bnd.bnd file . These values must match for the ServletContext to locate the JSP. We declare a unique value for Web-ContextPath in our bnd.bnd file so the ServletContext is correctly generated. In our example, Web-ContextPath is set to /c1n4-web . See bnd.bnd for a reference on these values.","title":"Configure the ServletContext for the Module"},{"location":"Commerce/Developer-Guide/tutorials/adding-a-new-product-type/#implement-the-screennavigationentrys-render-method","text":"@Override public void render( HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse) throws IOException { _jspRenderer.renderJSP( _servletContext, httpServletRequest, httpServletResponse, \"/edit_product.jsp\"); } Use a JSPRenderer to render the JSP for our product type's custom screen (in our example, edit_product.jsp ). Provide the ServletContext as a parameter to find the JSP we have created.","title":"Implement the ScreenNavigationEntry's render Method"},{"location":"Commerce/Developer-Guide/tutorials/adding-a-new-product-type/#override-the-screennavigationentrys-isvisible-method","text":"@Override public boolean isVisible(User user, CPDefinition context) { if (context == null) { return false; } String productTypeName = context.getProductTypeName(); if (productTypeName.equals(getCategoryKey())) { return true; } return false; } Implement logic here to determine when to show the custom screen. In our example, we only check whether the product type from the CPDefinition matches our example product type.","title":"Override the ScreenNavigationEntry's isVisible Method"},{"location":"Commerce/Developer-Guide/tutorials/adding-a-new-product-type/#add-the-product-type-deletion-logic-to-deletecpdefinition","text":"Our example does not require any logic to be added to deleteCPDefinition .","title":"Add the Product Type Deletion Logic to deleteCPDefinition"},{"location":"Commerce/Developer-Guide/tutorials/adding-a-new-product-type/#add-a-jsp-to-render-the-custom-screen","text":"In our example, we are adding a JSP with a text field. <%@ taglib uri=\"http://liferay.com/tld/aui\" prefix=\"aui\" %> <aui:input name=\"exampleInput\" type=\"text\" /> Implement any other inputs or actions desired on the custom screen here, such as a form or MVC action command. See MVC Action Command for more information on adding an MVC action command that can be accessed from the JSP.","title":"Add a JSP to Render the Custom Screen"},{"location":"Commerce/Developer-Guide/tutorials/adding-a-new-product-type/#add-the-language-key-to-languageproperties","text":"Add the language key and its value to a Language.properties file within our module: example=Example See Localizing Your Application for more information.","title":"Add the Language Key to Language.properties"},{"location":"Commerce/Developer-Guide/tutorials/adding-a-new-product-type/#conclusion","text":"Congratulations! You now know the basics for implementing the CPType interface, and have implemented a new product type with its own custom screen to Liferay Commerce.","title":"Conclusion"},{"location":"Commerce/Developer-Guide/tutorials/adding-a-new-product-type/#additional-information","text":"Introduction to Product Types Localizing Your Application","title":"Additional Information"},{"location":"Commerce/Developer-Guide/tutorials/implementing-a-custom-checkout-step/","text":"Implementing a Custom Checkout Step This tutorial will show you how to add a custom checkout step by implementing the CommerceCheckoutStep interface. A checkout step represents one screen of the checkout process for a customer. Liferay Commerce provides several checkout steps out-of-the-box, including essential steps like the payment method step and the order confirmation step . Overview Deploy an Example Walk Through the Example Additional Information Deploy an Example In this section, we will get an example checkout step up and running on your instance of Liferay Commerce. Follow these steps: Start Liferay Commerce. bash docker run -it -p 8080:8080 liferay/commerce:2.0.4 Download and unzip Acme Commerce Checkout Step . bash curl liferay-n8n6.zip bash unzip liferay-n8n6.zip Go to liferay-n8n6 . bash cd liferay-n8n6 Build and deploy the example. bash ./gradlew deploy -Ddeploy.docker.container.id=$(docker ps -lq) Note: This command is the same as copying the deployed jars to /opt/liferay/osgi/modules on the Docker container. Confirm the deployment in the Docker container console. bash STARTED com.acme.n8n6.web_1.0.0 Verify that the example checkout step was added. Open your browser to https://localhost:8080 and navigate to a catalog on any Liferay Commerce site. Add an item to the cart, view the cart, and then click \"Checkout\". The new \"Example Step\" will be present in the list of checkout steps. Congratulations, you've successfully built and deployed a new checkout step that implements CommerceCheckoutStep . Next, let's dive deeper to learn more. Walk Through the Example In this section, we will review the example we deployed. First, we will annotate the class for OSGi registration. Second, we will review the CommerceCheckoutStep interface. And third, we will complete our implementation of CommerceCheckoutStep . Note: To simplify implementing CommerceCheckoutStep , we extend BaseCommerceCheckoutStep for its base functionality. Annotate the Class for OSGi Registration @Component( immediate = true, property = { \"commerce.checkout.step.name=\" + N8N6CommerceCheckoutStep.NAME, \"commerce.checkout.step.order:Integer=21\" }, service = CommerceCheckoutStep.class ) public class N8N6CommerceCheckoutStep extends BaseCommerceCheckoutStep { public static final String NAME = \"example-step\"; The checkout step name must be a unique value so that Liferay Commerce can distinguish our checkout step from existing checkout steps. The commerce.checkout.step.order value indicates how far into the checkout process the checkout step will appear. For example, the shipping method checkout step has a value of 20. Giving our checkout step a value of 21 ensures that it will appear immediately after the shipping method step. Review the CommerceCheckoutStep Interface Implement the following methods in addition to extending the base class: public String getName(); This method returns the name of our checkout step. This name may be a language key that corresponds to the name that will appear in the UI. public void processAction( ActionRequest actionRequest, ActionResponse actionResponse) throws Exception; The processAction method may be used to implement business logic with the information passed through the ActionRequest if backend processing is required. public void render( HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse) throws Exception; This will be where we add the code to render a customized screen for our checkout step. Complete the Checkout Step The checkout step is comprised of a custom screen and backend logic to process any input. Do the following: Configure the ServletContext for the module. Implement the render method. Add business logic to processAction . Add a JSP to render the custom screen. Add the language key to Language.properties . Configure the ServletContext for the Module Define the ServletContext using the symbolic name of our bundle so that it can find the JSP in our module: @Reference(target = \"(osgi.web.symbolicname=com.acme.n8n6.web)\") private ServletContext _servletContext; The value we set for osgi.web.symbolicname matches the value for Bundle-SymbolicName in our bnd.bnd file . These values must match for the ServletContext to locate the JSP. We also need to declare a unique value for Web-ContextPath in our bnd.bnd file so the ServletContext is correctly generated. In our example, Web-ContextPath is set to /n8n6-web . See bnd.bnd for a reference on these values. Implement the render Method @Override public void render( HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse) throws Exception { _jspRenderer.renderJSP( _servletContext, httpServletRequest, httpServletResponse, \"/terms_and_conditions.jsp\"); } Use a JSPRenderer to render the JSP for our checkout step (in this case, terms_and_conditions.jsp ). Provide the ServletContext as a parameter to find the JSP we have created. Add Business Logic to processAction Our example will display text on a custom screen and does not require backend processing in the processAction implementation. Add a JSP to Render the Custom Screen In our example, we are adding placeholder text. You can see the implementation at terms_and_conditions.jsp . Add the Language Key to Language.properties Add the language key and its value to a Language.properties file within our module: example-step=Example Step See Localizing Your Application for more information. Conclusion Congratulations! You now know the basics for implementing the CommerceCheckoutStep interface, and have added a new checkout step to Liferay Commerce. Additional Information Checkout Localizing Your Application","title":"Implementing a Custom Checkout Step"},{"location":"Commerce/Developer-Guide/tutorials/implementing-a-custom-checkout-step/#implementing-a-custom-checkout-step","text":"This tutorial will show you how to add a custom checkout step by implementing the CommerceCheckoutStep interface. A checkout step represents one screen of the checkout process for a customer. Liferay Commerce provides several checkout steps out-of-the-box, including essential steps like the payment method step and the order confirmation step .","title":"Implementing a Custom Checkout Step"},{"location":"Commerce/Developer-Guide/tutorials/implementing-a-custom-checkout-step/#overview","text":"Deploy an Example Walk Through the Example Additional Information","title":"Overview"},{"location":"Commerce/Developer-Guide/tutorials/implementing-a-custom-checkout-step/#deploy-an-example","text":"In this section, we will get an example checkout step up and running on your instance of Liferay Commerce. Follow these steps: Start Liferay Commerce. bash docker run -it -p 8080:8080 liferay/commerce:2.0.4 Download and unzip Acme Commerce Checkout Step . bash curl liferay-n8n6.zip bash unzip liferay-n8n6.zip Go to liferay-n8n6 . bash cd liferay-n8n6 Build and deploy the example. bash ./gradlew deploy -Ddeploy.docker.container.id=$(docker ps -lq) Note: This command is the same as copying the deployed jars to /opt/liferay/osgi/modules on the Docker container. Confirm the deployment in the Docker container console. bash STARTED com.acme.n8n6.web_1.0.0 Verify that the example checkout step was added. Open your browser to https://localhost:8080 and navigate to a catalog on any Liferay Commerce site. Add an item to the cart, view the cart, and then click \"Checkout\". The new \"Example Step\" will be present in the list of checkout steps. Congratulations, you've successfully built and deployed a new checkout step that implements CommerceCheckoutStep . Next, let's dive deeper to learn more.","title":"Deploy an Example"},{"location":"Commerce/Developer-Guide/tutorials/implementing-a-custom-checkout-step/#walk-through-the-example","text":"In this section, we will review the example we deployed. First, we will annotate the class for OSGi registration. Second, we will review the CommerceCheckoutStep interface. And third, we will complete our implementation of CommerceCheckoutStep . Note: To simplify implementing CommerceCheckoutStep , we extend BaseCommerceCheckoutStep for its base functionality.","title":"Walk Through the Example"},{"location":"Commerce/Developer-Guide/tutorials/implementing-a-custom-checkout-step/#annotate-the-class-for-osgi-registration","text":"@Component( immediate = true, property = { \"commerce.checkout.step.name=\" + N8N6CommerceCheckoutStep.NAME, \"commerce.checkout.step.order:Integer=21\" }, service = CommerceCheckoutStep.class ) public class N8N6CommerceCheckoutStep extends BaseCommerceCheckoutStep { public static final String NAME = \"example-step\"; The checkout step name must be a unique value so that Liferay Commerce can distinguish our checkout step from existing checkout steps. The commerce.checkout.step.order value indicates how far into the checkout process the checkout step will appear. For example, the shipping method checkout step has a value of 20. Giving our checkout step a value of 21 ensures that it will appear immediately after the shipping method step.","title":"Annotate the Class for OSGi Registration"},{"location":"Commerce/Developer-Guide/tutorials/implementing-a-custom-checkout-step/#review-the-commercecheckoutstep-interface","text":"Implement the following methods in addition to extending the base class: public String getName(); This method returns the name of our checkout step. This name may be a language key that corresponds to the name that will appear in the UI. public void processAction( ActionRequest actionRequest, ActionResponse actionResponse) throws Exception; The processAction method may be used to implement business logic with the information passed through the ActionRequest if backend processing is required. public void render( HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse) throws Exception; This will be where we add the code to render a customized screen for our checkout step.","title":"Review the CommerceCheckoutStep Interface"},{"location":"Commerce/Developer-Guide/tutorials/implementing-a-custom-checkout-step/#complete-the-checkout-step","text":"The checkout step is comprised of a custom screen and backend logic to process any input. Do the following: Configure the ServletContext for the module. Implement the render method. Add business logic to processAction . Add a JSP to render the custom screen. Add the language key to Language.properties .","title":"Complete the Checkout Step"},{"location":"Commerce/Developer-Guide/tutorials/implementing-a-custom-checkout-step/#configure-the-servletcontext-for-the-module","text":"Define the ServletContext using the symbolic name of our bundle so that it can find the JSP in our module: @Reference(target = \"(osgi.web.symbolicname=com.acme.n8n6.web)\") private ServletContext _servletContext; The value we set for osgi.web.symbolicname matches the value for Bundle-SymbolicName in our bnd.bnd file . These values must match for the ServletContext to locate the JSP. We also need to declare a unique value for Web-ContextPath in our bnd.bnd file so the ServletContext is correctly generated. In our example, Web-ContextPath is set to /n8n6-web . See bnd.bnd for a reference on these values.","title":"Configure the ServletContext for the Module"},{"location":"Commerce/Developer-Guide/tutorials/implementing-a-custom-checkout-step/#implement-the-render-method","text":"@Override public void render( HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse) throws Exception { _jspRenderer.renderJSP( _servletContext, httpServletRequest, httpServletResponse, \"/terms_and_conditions.jsp\"); } Use a JSPRenderer to render the JSP for our checkout step (in this case, terms_and_conditions.jsp ). Provide the ServletContext as a parameter to find the JSP we have created.","title":"Implement the render Method"},{"location":"Commerce/Developer-Guide/tutorials/implementing-a-custom-checkout-step/#add-business-logic-to-processaction","text":"Our example will display text on a custom screen and does not require backend processing in the processAction implementation.","title":"Add Business Logic to processAction"},{"location":"Commerce/Developer-Guide/tutorials/implementing-a-custom-checkout-step/#add-a-jsp-to-render-the-custom-screen","text":"In our example, we are adding placeholder text. You can see the implementation at terms_and_conditions.jsp .","title":"Add a JSP to Render the Custom Screen"},{"location":"Commerce/Developer-Guide/tutorials/implementing-a-custom-checkout-step/#add-the-language-key-to-languageproperties","text":"Add the language key and its value to a Language.properties file within our module: example-step=Example Step See Localizing Your Application for more information.","title":"Add the Language Key to Language.properties"},{"location":"Commerce/Developer-Guide/tutorials/implementing-a-custom-checkout-step/#conclusion","text":"Congratulations! You now know the basics for implementing the CommerceCheckoutStep interface, and have added a new checkout step to Liferay Commerce.","title":"Conclusion"},{"location":"Commerce/Developer-Guide/tutorials/implementing-a-custom-checkout-step/#additional-information","text":"Checkout Localizing Your Application","title":"Additional Information"},{"location":"Commerce/Get-Help/","text":"Get Help Training Consulting Liferay University Join the Community Subscription Services Liferay Commerce 2.0 Compatibility Matrix Liferay Commerce Fix Delivery Method Service Life Support Coverage Open a Ticket","title":"Get Help"},{"location":"Commerce/Get-Help/#get-help","text":"","title":"Get Help"},{"location":"Commerce/Get-Help/#training","text":"","title":"Training"},{"location":"Commerce/Get-Help/#consulting","text":"","title":"Consulting"},{"location":"Commerce/Get-Help/#liferay-university","text":"","title":"Liferay University"},{"location":"Commerce/Get-Help/#join-the-community","text":"","title":"Join the Community"},{"location":"Commerce/Get-Help/#subscription-services","text":"Liferay Commerce 2.0 Compatibility Matrix Liferay Commerce Fix Delivery Method Service Life Support Coverage Open a Ticket","title":"Subscription Services"},{"location":"Commerce/Get-Help/Commerce-Enterprise-Support/liferay-commerce-fix-delivery-method/","text":"Liferay Commerce Fix Delivery Method Subscribers only Delivering fixes is one of the essential services included with your Liferay Enterprise Subscription. For Liferay Commerce, we have designed our fix delivery method to match your project phase so you have ongoing access to the latest updates. Use the chart below as well as the definitions that follow to better understand how we provide fixes for Liferay Commerce. Liferay Commerce is built on Liferay Digital Experience Platform (DXP). Therefore, updates to Liferay Commerce may require updates to the core platform as specified by Liferay Commerce. Development Phase: Maintenance Updates Maintenance Updates are periodically released for Liferay Commerce. Included in these updates are a collection of fixes that are carefully selected and uphold the quality and stability of the product by resolving known issues. Maintenance Updates undergo extensive QA testing and introduce significantly less risk than an Emergency Update. They represent the most current code base, and since Liferay focuses on resolving known issues in the current code base, we recommend that you stay up to date with the latest Maintenance Updates during your project's Development Phases. For the core modules and suites that are part of Liferay Digital Experience Platform, Maintenance Updates will be released as a single DXP 7.1 fix pack through Liferay Connected Services and Customer Portal. Estimated Release Targets Regular As Needed Liferay DXP * \u2713 \u2713 Liferay Commerce \u2713 \u2713 Production Phase: Emergency Updates Emergency Updates are provided on a case-by-case basis for Liferay components that are deployed on production environments. If your Production deployment schedule limits the amount of changes you can make to your Production environments, or their frequency, we recommend that you request Emergency Updates from the Liferay Support Team. These updates are customer-specific temporary solutions that will be included in future Maintenance Updates. For Liferay Digital Experience Platform, Emergency Updates are also known as hotfixes which are short-term solutions that can patch the core modules and suites. If you have installed Emergency Updates, we highly recommend that you bring your Liferay DXP system up to date with the latest Maintenance Updates, as soon as you enter a new Development Phase. Estimated Release Targets Regular Liferay DXP * \u2713 Liferay Commerce \u2713 * Core Modules and Suites (Static, Foundation, Web Experience, Collaboration, Forms and Workflow)","title":"Liferay Commerce Fix Delivery Method"},{"location":"Commerce/Get-Help/Commerce-Enterprise-Support/liferay-commerce-fix-delivery-method/#liferay-commerce-fix-delivery-method","text":"Subscribers only Delivering fixes is one of the essential services included with your Liferay Enterprise Subscription. For Liferay Commerce, we have designed our fix delivery method to match your project phase so you have ongoing access to the latest updates. Use the chart below as well as the definitions that follow to better understand how we provide fixes for Liferay Commerce. Liferay Commerce is built on Liferay Digital Experience Platform (DXP). Therefore, updates to Liferay Commerce may require updates to the core platform as specified by Liferay Commerce.","title":"Liferay Commerce Fix Delivery Method"},{"location":"Commerce/Get-Help/Commerce-Enterprise-Support/liferay-commerce-fix-delivery-method/#development-phase-maintenance-updates","text":"Maintenance Updates are periodically released for Liferay Commerce. Included in these updates are a collection of fixes that are carefully selected and uphold the quality and stability of the product by resolving known issues. Maintenance Updates undergo extensive QA testing and introduce significantly less risk than an Emergency Update. They represent the most current code base, and since Liferay focuses on resolving known issues in the current code base, we recommend that you stay up to date with the latest Maintenance Updates during your project's Development Phases. For the core modules and suites that are part of Liferay Digital Experience Platform, Maintenance Updates will be released as a single DXP 7.1 fix pack through Liferay Connected Services and Customer Portal. Estimated Release Targets Regular As Needed Liferay DXP * \u2713 \u2713 Liferay Commerce \u2713 \u2713","title":"Development Phase: Maintenance Updates"},{"location":"Commerce/Get-Help/Commerce-Enterprise-Support/liferay-commerce-fix-delivery-method/#production-phase-emergency-updates","text":"Emergency Updates are provided on a case-by-case basis for Liferay components that are deployed on production environments. If your Production deployment schedule limits the amount of changes you can make to your Production environments, or their frequency, we recommend that you request Emergency Updates from the Liferay Support Team. These updates are customer-specific temporary solutions that will be included in future Maintenance Updates. For Liferay Digital Experience Platform, Emergency Updates are also known as hotfixes which are short-term solutions that can patch the core modules and suites. If you have installed Emergency Updates, we highly recommend that you bring your Liferay DXP system up to date with the latest Maintenance Updates, as soon as you enter a new Development Phase. Estimated Release Targets Regular Liferay DXP * \u2713 Liferay Commerce \u2713 * Core Modules and Suites (Static, Foundation, Web Experience, Collaboration, Forms and Workflow)","title":"Production Phase: Emergency Updates"},{"location":"Commerce/Installation-and-Upgrades/quick-start-guide/","text":"Quick Start Guide Follow these steps to download the latest release of Liferay Commerce and get started. Let's Go Get Liferay Commerce Don't have Docker ? Go here first: Linux | Windows | OSX bash docker pull liferay/commerce:2.0.4 Start Liferay Commerce bash docker run -it -p 8080:8080 liferay/commerce:2.0.4 Wait until you see org.apache.catalina.startup.Catalina.start Server startup in [x] milliseconds Open your browser to https://localhost:8080 What's Next Doing more than just checking things out? See the Installation Overview . Want to get a store up and running in minutes? Learn about Accelerators .","title":"Quick Start Guide"},{"location":"Commerce/Installation-and-Upgrades/quick-start-guide/#quick-start-guide","text":"Follow these steps to download the latest release of Liferay Commerce and get started.","title":"Quick Start Guide"},{"location":"Commerce/Installation-and-Upgrades/quick-start-guide/#lets-go","text":"Get Liferay Commerce Don't have Docker ? Go here first: Linux | Windows | OSX bash docker pull liferay/commerce:2.0.4 Start Liferay Commerce bash docker run -it -p 8080:8080 liferay/commerce:2.0.4 Wait until you see org.apache.catalina.startup.Catalina.start Server startup in [x] milliseconds Open your browser to https://localhost:8080","title":"Let's Go"},{"location":"Commerce/Installation-and-Upgrades/quick-start-guide/#whats-next","text":"Doing more than just checking things out? See the Installation Overview . Want to get a store up and running in minutes? Learn about Accelerators .","title":"What's Next"},{"location":"Commerce/Installation-and-Upgrades/Installation-Guide/deploying-liferay-commerce-to-an-existing-liferay-installation/","text":"Deploying Liferay Commerce to an Existing Liferay Installation This article documents how to deploy Liferay Commerce to an existing Liferay DXP instance. Because Liferay Commerce is built on Liferay DXP, it is necessary to have an existing DXP 7.1 instance running. Prior to following this guide, please review System Requirements. To begin using Liferay Commerce: Download the latest Liferay Commerce LPKG . Enterprise subscribers can download the latest LPKG from Help Center . Subscribers also need an order number or activation key for Liferay Commerce. See Activating a Marketplace App Through a Proxy Server . The latest open source LPKG may be obtained from the Liferay Commerce Community Site . Deploy the LPKG to the ${liferay.home}/deploy folder. > To learn more about deploying applications to Liferay DXP, see Liferay Home . ( Subscribers only ) Deploy the activation key to the ${liferay.home}/deploy folder. Verify the following message appears in the application server console: 2019-08-09 00:25:10.662 INFO [fileinstall-/../../liferay-dxp-7.1.10.1-sp1/osgi/marketplace][LPKGArtifactInstaller:202] The portal instance needs to be restarted to complete the installation of file:/../../liferay-dxp-7.1.10.1-sp1/osgi/marketplace/Liferay%20Commerce%20-%20API.lpkg 2019-08-09 00:25:10.664 INFO [fileinstall-/../..//liferay-dxp-7.1.10.1-sp1/osgi/marketplace][LPKGArtifactInstaller:202] The portal instance needs to be restarted to complete the installation of file:/../../liferay-dxp-7.1.10.1-sp1/osgi/marketplace/Liferay%20Commerce%20-%20Impl.lpkg Shut down the application server completely. Start the application server. Verify that the LPKG has begun installation by looking for this message: 2019-08-09 00:32:48.850 INFO [main][BaseDeployer:877] Deploying minium-theme.war On the first deployment, there are a series of commands followed by this message: 2019-08-09 00:34:51.753 INFO [main][ThemeHotDeployListener:108] 1 theme for minium-theme is available for use Liferay Commerce has been deployed and is ready for use. Store administrators can begin building a storefront and populating their catalog. Additional Information Note that if the application server is restarted, Liferay Commerce will not execute the VerifyProcess commands a second time. Liferay Commerce 2.0 Compatibility Matrix Installation Overview Using the Liferay Commerce Tomcat Bundle Deploying to Liferay DXP Cloud Deploying and Configuring Addons","title":"Deploying Liferay Commerce to an Existing Liferay Installation"},{"location":"Commerce/Installation-and-Upgrades/Installation-Guide/deploying-liferay-commerce-to-an-existing-liferay-installation/#deploying-liferay-commerce-to-an-existing-liferay-installation","text":"This article documents how to deploy Liferay Commerce to an existing Liferay DXP instance. Because Liferay Commerce is built on Liferay DXP, it is necessary to have an existing DXP 7.1 instance running. Prior to following this guide, please review System Requirements. To begin using Liferay Commerce: Download the latest Liferay Commerce LPKG . Enterprise subscribers can download the latest LPKG from Help Center . Subscribers also need an order number or activation key for Liferay Commerce. See Activating a Marketplace App Through a Proxy Server . The latest open source LPKG may be obtained from the Liferay Commerce Community Site . Deploy the LPKG to the ${liferay.home}/deploy folder. > To learn more about deploying applications to Liferay DXP, see Liferay Home . ( Subscribers only ) Deploy the activation key to the ${liferay.home}/deploy folder. Verify the following message appears in the application server console: 2019-08-09 00:25:10.662 INFO [fileinstall-/../../liferay-dxp-7.1.10.1-sp1/osgi/marketplace][LPKGArtifactInstaller:202] The portal instance needs to be restarted to complete the installation of file:/../../liferay-dxp-7.1.10.1-sp1/osgi/marketplace/Liferay%20Commerce%20-%20API.lpkg 2019-08-09 00:25:10.664 INFO [fileinstall-/../..//liferay-dxp-7.1.10.1-sp1/osgi/marketplace][LPKGArtifactInstaller:202] The portal instance needs to be restarted to complete the installation of file:/../../liferay-dxp-7.1.10.1-sp1/osgi/marketplace/Liferay%20Commerce%20-%20Impl.lpkg Shut down the application server completely. Start the application server. Verify that the LPKG has begun installation by looking for this message: 2019-08-09 00:32:48.850 INFO [main][BaseDeployer:877] Deploying minium-theme.war On the first deployment, there are a series of commands followed by this message: 2019-08-09 00:34:51.753 INFO [main][ThemeHotDeployListener:108] 1 theme for minium-theme is available for use Liferay Commerce has been deployed and is ready for use. Store administrators can begin building a storefront and populating their catalog.","title":"Deploying Liferay Commerce to an Existing Liferay Installation"},{"location":"Commerce/Installation-and-Upgrades/Installation-Guide/deploying-liferay-commerce-to-an-existing-liferay-installation/#additional-information","text":"Note that if the application server is restarted, Liferay Commerce will not execute the VerifyProcess commands a second time. Liferay Commerce 2.0 Compatibility Matrix Installation Overview Using the Liferay Commerce Tomcat Bundle Deploying to Liferay DXP Cloud Deploying and Configuring Addons","title":"Additional Information"},{"location":"Commerce/Installation-and-Upgrades/Installation-Guide/installation-overview/","text":"Installation Overview The article details prerequisites, information about required software, installation and deployment, and how to maintain Liferay Commerce. Liferay Commerce is built on Liferay DXP 7.1. Therefore, it is necessary to install Liferay Digital Experience Platform first before installing Liferay Commerce. Prerequisites Before installing, consult the systems requirements and the Liferay DXP deployment documentation. System Requirements See the Liferay Commerce 2.0 Compatibility Matrix to view the list of supported technologies. Liferay DXP Deployment Checklist See the Liferay Digital Experience Platform 7.1 Deployment Checklist for information about Liferay DXP architecture and performance tuning guidelines. Installing Liferay Commerce Liferay offers several methods of installing Liferay Commerce. Using a Bundle The latest version of Liferay Commerce (Open Source) is available for download as a bundle from the Liferay Commerce Community Download page. See Using the Liferay Commerce Tomcat Bundle for more information. Using an Existing Liferay DXP Installation If using an existing Liferay DXP installation, users may deploy Liferay Commerce using the LPKG . See Deploying Liferay Commerce to an Existing Installation for more information. Activating Commerce Enterprise Maintaining Liferay Commerce Upgrades and Updates There are periodic updates and upgrades that contain the latest features and bug fixes. Maintenance Versions Upgrading from Liferay Commerce 1.1.x Additional Information Liferay Digital Experience Platform Performance Deploying Liferay DXP Using Docker Activating a Marketplace App Through a Proxy Server","title":"Installation Overview"},{"location":"Commerce/Installation-and-Upgrades/Installation-Guide/installation-overview/#installation-overview","text":"The article details prerequisites, information about required software, installation and deployment, and how to maintain Liferay Commerce. Liferay Commerce is built on Liferay DXP 7.1. Therefore, it is necessary to install Liferay Digital Experience Platform first before installing Liferay Commerce.","title":"Installation Overview"},{"location":"Commerce/Installation-and-Upgrades/Installation-Guide/installation-overview/#prerequisites","text":"Before installing, consult the systems requirements and the Liferay DXP deployment documentation.","title":"Prerequisites"},{"location":"Commerce/Installation-and-Upgrades/Installation-Guide/installation-overview/#system-requirements","text":"See the Liferay Commerce 2.0 Compatibility Matrix to view the list of supported technologies.","title":"System Requirements"},{"location":"Commerce/Installation-and-Upgrades/Installation-Guide/installation-overview/#liferay-dxp-deployment-checklist","text":"See the Liferay Digital Experience Platform 7.1 Deployment Checklist for information about Liferay DXP architecture and performance tuning guidelines.","title":"Liferay DXP Deployment Checklist"},{"location":"Commerce/Installation-and-Upgrades/Installation-Guide/installation-overview/#installing-liferay-commerce","text":"Liferay offers several methods of installing Liferay Commerce.","title":"Installing Liferay Commerce"},{"location":"Commerce/Installation-and-Upgrades/Installation-Guide/installation-overview/#using-a-bundle","text":"The latest version of Liferay Commerce (Open Source) is available for download as a bundle from the Liferay Commerce Community Download page. See Using the Liferay Commerce Tomcat Bundle for more information.","title":"Using a Bundle"},{"location":"Commerce/Installation-and-Upgrades/Installation-Guide/installation-overview/#using-an-existing-liferay-dxp-installation","text":"If using an existing Liferay DXP installation, users may deploy Liferay Commerce using the LPKG . See Deploying Liferay Commerce to an Existing Installation for more information.","title":"Using an Existing Liferay DXP Installation"},{"location":"Commerce/Installation-and-Upgrades/Installation-Guide/installation-overview/#activating-commerce-enterprise","text":"","title":"Activating Commerce Enterprise"},{"location":"Commerce/Installation-and-Upgrades/Installation-Guide/installation-overview/#maintaining-liferay-commerce","text":"","title":"Maintaining Liferay Commerce"},{"location":"Commerce/Installation-and-Upgrades/Installation-Guide/installation-overview/#upgrades-and-updates","text":"There are periodic updates and upgrades that contain the latest features and bug fixes. Maintenance Versions Upgrading from Liferay Commerce 1.1.x","title":"Upgrades and Updates"},{"location":"Commerce/Installation-and-Upgrades/Installation-Guide/installation-overview/#additional-information","text":"Liferay Digital Experience Platform Performance Deploying Liferay DXP Using Docker Activating a Marketplace App Through a Proxy Server","title":"Additional Information"},{"location":"Commerce/Installation-and-Upgrades/Installation-Guide/using-the-liferay-commerce-tomcat-bundle/","text":"Using the Liferay Commerce Tomcat Bundle The Liferay Commerce open source bundle is available for download from the Liferay Commerce Community Downloads page. The bundle contains the latest version of Liferay Commerce and Liferay Portal CE pre-deployed to Apache Tomcat. Before obtaining the bundle, read the Liferay Commerce Compatibility Matrix for a list of supported technologies. To use the Liferay Commerce bundle, follow these steps: Get the Liferay Commerce Tomcat Bundle Download Page Unzip the bundle to the target location. Start the Tomcat bundle Navigate to $CATALINA_HOME/bin . Execute ./catalina.sh run . For Windows users, run: catalina run Wait until you see org.apache.catalina.startup.Catalina.start Server startup in [x] milliseconds Open your browser to https://localhost:8080 . Additional Information Installation Overview Installing Liferay DXP Liferay Commerce 2.0 Compatibility Matrix","title":"Using the Liferay Commerce Tomcat Bundle"},{"location":"Commerce/Installation-and-Upgrades/Installation-Guide/using-the-liferay-commerce-tomcat-bundle/#using-the-liferay-commerce-tomcat-bundle","text":"The Liferay Commerce open source bundle is available for download from the Liferay Commerce Community Downloads page. The bundle contains the latest version of Liferay Commerce and Liferay Portal CE pre-deployed to Apache Tomcat. Before obtaining the bundle, read the Liferay Commerce Compatibility Matrix for a list of supported technologies. To use the Liferay Commerce bundle, follow these steps: Get the Liferay Commerce Tomcat Bundle Download Page Unzip the bundle to the target location. Start the Tomcat bundle Navigate to $CATALINA_HOME/bin . Execute ./catalina.sh run . For Windows users, run: catalina run Wait until you see org.apache.catalina.startup.Catalina.start Server startup in [x] milliseconds Open your browser to https://localhost:8080 .","title":"Using the Liferay Commerce Tomcat Bundle"},{"location":"Commerce/Installation-and-Upgrades/Installation-Guide/using-the-liferay-commerce-tomcat-bundle/#additional-information","text":"Installation Overview Installing Liferay DXP Liferay Commerce 2.0 Compatibility Matrix","title":"Additional Information"},{"location":"Commerce/Installation-and-Upgrades/Upgrades-and-Updates/Maintenance-Versions/","text":"Maintenance Versions Periodically, Liferay will release updates (maintenance versions) to Liferay Commerce for both open source and enterprise subscribers. These updates contain bug fixes and resolves any security issues. Updating to a new maintenance version is very similar to upgrading to a new major version of Liferay Commerce. To update to a new maintenance version: Download and Deploy Download the latest Liferay Commerce LPKG . Enterprise subscribers can download the latest LPKG from Help Center . Subscribers also need an order number or activation key for Liferay Commerce. See Activating a Marketplace App Through a Proxy Server . The latest open source LPKG may be obtained from the Liferay Commerce Community Site . Deploy the LPKG to the ${liferay.home}/deploy folder. Verify that that the following message appears in the application server console: 2019-08-12 21:53:43.847 INFO [com.liferay.portal.kernel.deploy.auto.AutoDeployScanner][AutoDeployDir:261] Processing Liferay Commerce Enterprise 2.0.4.lpkg 2019-08-13 18:12:56.713 INFO [fileinstall-/../../liferay-commerce-enterprise-1.1.6/osgi/marketplace][LPKGArtifactInstaller:202] The portal instance needs to be restarted to complete the installation of file:/../../liferay-commerce-enterprise-1.1.6/osgi/marketplace/Liferay%20Commerce%20-%20API.lpkg 2019-08-13 18:12:56.715 INFO [fileinstall-/../../liferay-commerce-enterprise-1.1.6/osgi/marketplace][LPKGArtifactInstaller:202] The portal instance needs to be restarted to complete the installation of file:/../../liferay-commerce-enterprise-1.1.6/osgi/marketplace/Liferay%20Commerce%20-%20Impl.lpkg Shut down the application server. Clear Stale Data and Restart the Server Delete the ${liferay.home}/osgi/state folder. > To learn more about OSGi folders, see Installing Apps Manually . Start the application server. Verify that the the upgrade process has begun by looking for messages similar to this in your application server console logs: 2019-08-13 18:26:26.082 INFO [main][UpgradeProcess:93] Upgrading com.liferay.commerce.account.internal.upgrade.v1_2_0.CommerceAccountGroupCommerceAccountRelUpgradeProcess 2019-08-13 18:26:26.106 INFO [main][UpgradeProcess:107] Completed upgrade process com.liferay.commerce.account.internal.upgrade.v1_2_0.CommerceAccountGroupCommerceAccountRelUpgradeProcess in 24 ms 2019-08-13 18:26:26.116 INFO [main][UpgradeProcess:93] Upgrading com.liferay.commerce.account.internal.upgrade.v1_2_0.CommerceAccountGroupRelUpgradeProcess 2019-08-13 18:26:26.124 INFO [main][UpgradeProcess:107] Completed upgrade process com.liferay.commerce.account.internal.upgrade.v1_2_0.CommerceAccountGroupRelUpgradeProcess in 8 ms 2019-08-13 18:26:26.130 INFO [main][UpgradeProcess:93] Upgrading com.liferay.commerce.account.internal.upgrade.v1_2_0.CommerceAccountGroupUpgradeProcess 2019-08-13 18:26:26.142 INFO [main][UpgradeProcess:107] Completed upgrade process com.liferay.commerce.account.internal.upgrade.v1_2_0.CommerceAccountGroupUpgradeProcess in 12 ms 2019-08-13 18:26:26.148 INFO [main][UpgradeProcess:93] Upgrading com.liferay.commerce.account.internal.upgrade.v1_3_0.CommerceAccountNameUpgradeProcess 2019-08-13 18:26:26.160 INFO [main][LoggingTimer:83] Starting com.liferay.portal.kernel.upgrade.UpgradeProcess#alter 2019-08-13 18:26:26.200 INFO [main][LoggingTimer:43] Completed com.liferay.portal.kernel.upgrade.UpgradeProcess#alter in 40 ms 2019-08-13 18:26:26.208 INFO [main][UpgradeProcess:107] Completed upgrade process com.liferay.commerce.account.internal.upgrade.v1_3_0.CommerceAccountNameUpgradeProcess in 60 ms 2019-08-13 18:26:26.246 INFO [main][LoggingTimer:83] Starting com.liferay.portal.upgrade.internal.index.updater.IndexUpdaterUtil#updateIndexes#Updating database indexes for com.liferay.commerce.account.service 2019-08-13 18:26:26.346 INFO [main][BaseDB:812] Dropping stale indexes 2019-08-13 18:26:26.400 INFO [main][BaseDB:84] Adding indexes 2019-08-13 18:28:19.439 INFO [main][VerifyProcess:65] Verifying com.liferay.commerce.product.internal.verify.CommerceCatalogServiceVerifyProcess 2019-08-13 18:28:19.443 INFO [main][LoggingTimer:83] Starting com.liferay.commerce.product.internal.verify.CommerceCatalogServiceVerifyProcess#verifyMasterCommerceCatalog 2019-08-13 18:28:19.445 INFO [main][LoggingTimer:43] Completed com.liferay.commerce.product.internal.verify.CommerceCatalogServiceVerifyProcess#verifyMasterCommerceCatalog in 2 ms 2019-08-13 18:28:19.446 INFO [main][VerifyProcess:80] Completed verification process com.liferay.commerce.product.internal.verify.CommerceCatalogServiceVerifyProcess in 7 ms 2019-08-13 18:28:32.471 INFO [main][ThemeHotDeployListener:108] 1 theme for admin-theme is available for use 2019-08-13 18:28:34.296 INFO [main][ThemeHotDeployListener:108] 1 theme for classic-theme is available for use 2019-08-13 18:28:38.667 INFO [main][ThemeHotDeployListener:108] 1 theme for minium-theme is available for use The Liferay Commerce instance has been updated. There is no need to reindex and all the data remains unchanged. Additional Information Liferay Commerce is built on Liferay DXP 7.1. Occasionally, it is necessary to update the core Liferay DXP platform, are a requirement to updating to the latest maintenance version. Fixes to Liferay Commerce are independent from Liferay. Liferay Commerce Fix Delivery Method Upgrading from Liferay Commerce 1.1.x","title":"Maintenance Versions"},{"location":"Commerce/Installation-and-Upgrades/Upgrades-and-Updates/Maintenance-Versions/#maintenance-versions","text":"Periodically, Liferay will release updates (maintenance versions) to Liferay Commerce for both open source and enterprise subscribers. These updates contain bug fixes and resolves any security issues. Updating to a new maintenance version is very similar to upgrading to a new major version of Liferay Commerce. To update to a new maintenance version:","title":"Maintenance Versions"},{"location":"Commerce/Installation-and-Upgrades/Upgrades-and-Updates/Maintenance-Versions/#download-and-deploy","text":"Download the latest Liferay Commerce LPKG . Enterprise subscribers can download the latest LPKG from Help Center . Subscribers also need an order number or activation key for Liferay Commerce. See Activating a Marketplace App Through a Proxy Server . The latest open source LPKG may be obtained from the Liferay Commerce Community Site . Deploy the LPKG to the ${liferay.home}/deploy folder. Verify that that the following message appears in the application server console: 2019-08-12 21:53:43.847 INFO [com.liferay.portal.kernel.deploy.auto.AutoDeployScanner][AutoDeployDir:261] Processing Liferay Commerce Enterprise 2.0.4.lpkg 2019-08-13 18:12:56.713 INFO [fileinstall-/../../liferay-commerce-enterprise-1.1.6/osgi/marketplace][LPKGArtifactInstaller:202] The portal instance needs to be restarted to complete the installation of file:/../../liferay-commerce-enterprise-1.1.6/osgi/marketplace/Liferay%20Commerce%20-%20API.lpkg 2019-08-13 18:12:56.715 INFO [fileinstall-/../../liferay-commerce-enterprise-1.1.6/osgi/marketplace][LPKGArtifactInstaller:202] The portal instance needs to be restarted to complete the installation of file:/../../liferay-commerce-enterprise-1.1.6/osgi/marketplace/Liferay%20Commerce%20-%20Impl.lpkg Shut down the application server.","title":"Download and Deploy"},{"location":"Commerce/Installation-and-Upgrades/Upgrades-and-Updates/Maintenance-Versions/#clear-stale-data-and-restart-the-server","text":"Delete the ${liferay.home}/osgi/state folder. > To learn more about OSGi folders, see Installing Apps Manually . Start the application server. Verify that the the upgrade process has begun by looking for messages similar to this in your application server console logs: 2019-08-13 18:26:26.082 INFO [main][UpgradeProcess:93] Upgrading com.liferay.commerce.account.internal.upgrade.v1_2_0.CommerceAccountGroupCommerceAccountRelUpgradeProcess 2019-08-13 18:26:26.106 INFO [main][UpgradeProcess:107] Completed upgrade process com.liferay.commerce.account.internal.upgrade.v1_2_0.CommerceAccountGroupCommerceAccountRelUpgradeProcess in 24 ms 2019-08-13 18:26:26.116 INFO [main][UpgradeProcess:93] Upgrading com.liferay.commerce.account.internal.upgrade.v1_2_0.CommerceAccountGroupRelUpgradeProcess 2019-08-13 18:26:26.124 INFO [main][UpgradeProcess:107] Completed upgrade process com.liferay.commerce.account.internal.upgrade.v1_2_0.CommerceAccountGroupRelUpgradeProcess in 8 ms 2019-08-13 18:26:26.130 INFO [main][UpgradeProcess:93] Upgrading com.liferay.commerce.account.internal.upgrade.v1_2_0.CommerceAccountGroupUpgradeProcess 2019-08-13 18:26:26.142 INFO [main][UpgradeProcess:107] Completed upgrade process com.liferay.commerce.account.internal.upgrade.v1_2_0.CommerceAccountGroupUpgradeProcess in 12 ms 2019-08-13 18:26:26.148 INFO [main][UpgradeProcess:93] Upgrading com.liferay.commerce.account.internal.upgrade.v1_3_0.CommerceAccountNameUpgradeProcess 2019-08-13 18:26:26.160 INFO [main][LoggingTimer:83] Starting com.liferay.portal.kernel.upgrade.UpgradeProcess#alter 2019-08-13 18:26:26.200 INFO [main][LoggingTimer:43] Completed com.liferay.portal.kernel.upgrade.UpgradeProcess#alter in 40 ms 2019-08-13 18:26:26.208 INFO [main][UpgradeProcess:107] Completed upgrade process com.liferay.commerce.account.internal.upgrade.v1_3_0.CommerceAccountNameUpgradeProcess in 60 ms 2019-08-13 18:26:26.246 INFO [main][LoggingTimer:83] Starting com.liferay.portal.upgrade.internal.index.updater.IndexUpdaterUtil#updateIndexes#Updating database indexes for com.liferay.commerce.account.service 2019-08-13 18:26:26.346 INFO [main][BaseDB:812] Dropping stale indexes 2019-08-13 18:26:26.400 INFO [main][BaseDB:84] Adding indexes 2019-08-13 18:28:19.439 INFO [main][VerifyProcess:65] Verifying com.liferay.commerce.product.internal.verify.CommerceCatalogServiceVerifyProcess 2019-08-13 18:28:19.443 INFO [main][LoggingTimer:83] Starting com.liferay.commerce.product.internal.verify.CommerceCatalogServiceVerifyProcess#verifyMasterCommerceCatalog 2019-08-13 18:28:19.445 INFO [main][LoggingTimer:43] Completed com.liferay.commerce.product.internal.verify.CommerceCatalogServiceVerifyProcess#verifyMasterCommerceCatalog in 2 ms 2019-08-13 18:28:19.446 INFO [main][VerifyProcess:80] Completed verification process com.liferay.commerce.product.internal.verify.CommerceCatalogServiceVerifyProcess in 7 ms 2019-08-13 18:28:32.471 INFO [main][ThemeHotDeployListener:108] 1 theme for admin-theme is available for use 2019-08-13 18:28:34.296 INFO [main][ThemeHotDeployListener:108] 1 theme for classic-theme is available for use 2019-08-13 18:28:38.667 INFO [main][ThemeHotDeployListener:108] 1 theme for minium-theme is available for use The Liferay Commerce instance has been updated. There is no need to reindex and all the data remains unchanged.","title":"Clear Stale Data and Restart the Server"},{"location":"Commerce/Installation-and-Upgrades/Upgrades-and-Updates/Maintenance-Versions/#additional-information","text":"Liferay Commerce is built on Liferay DXP 7.1. Occasionally, it is necessary to update the core Liferay DXP platform, are a requirement to updating to the latest maintenance version. Fixes to Liferay Commerce are independent from Liferay. Liferay Commerce Fix Delivery Method Upgrading from Liferay Commerce 1.1.x","title":"Additional Information"},{"location":"Commerce/Installation-and-Upgrades/Upgrades-and-Updates/Upgrading-From-Liferay-Commerce-1.1.x/","text":"Upgrading from Liferay Commerce 1.1.x This article documents how to upgrade Liferay Commerce to the latest maintenance version. Store administrators should consider regularly updating to the latest available maintenance version to receive bug fixes and new features. Roadmap Download and Deploy. Clear Stale Data and Verify the Upgrade Process. Execute Post-Upgrade Reindex. Download and Deploy Download the latest Liferay Commerce LPKG from Help Center . >The latest open source LPKG may be obtained from the Liferay Commerce Community Download Page . Deploy the LPKG to the ${liferay.home}/deploy folder. > To learn more about deploying applications to Liferay DXP, see Liferay Home . Verify that that the following message appears in the application server console: 2019-08-12 21:53:43.847 INFO [com.liferay.portal.kernel.deploy.auto.AutoDeployScanner][AutoDeployDir:261] Processing Liferay Commerce Enterprise 2.0.4.lpkg 2019-08-13 18:12:56.713 INFO [fileinstall-/../../liferay-commerce-enterprise-1.1.6/osgi/marketplace][LPKGArtifactInstaller:202] The portal instance needs to be restarted to complete the installation of file:/../../liferay-commerce-enterprise-1.1.6/osgi/marketplace/Liferay%20Commerce%20-%20API.lpkg 2019-08-13 18:12:56.715 INFO [fileinstall-/../../liferay-commerce-enterprise-1.1.6/osgi/marketplace][LPKGArtifactInstaller:202] The portal instance needs to be restarted to complete the installation of file:/../../liferay-commerce-enterprise-1.1.6/osgi/marketplace/Liferay%20Commerce%20-%20Impl.lpkg Shut down the application server. Clear Stale Data and Verify the Upgrade Process Delete the ${liferay.home}/osgi/state folder. > To learn more about OSGi folders, see Installing Apps Manually . Start the application server. Verify that the the upgrade process has begun by looking for messages similar to this in your application server console logs: 2019-08-13 18:26:26.082 INFO [main][UpgradeProcess:93] Upgrading com.liferay.commerce.account.internal.upgrade.v1_2_0.CommerceAccountGroupCommerceAccountRelUpgradeProcess 2019-08-13 18:26:26.106 INFO [main][UpgradeProcess:107] Completed upgrade process com.liferay.commerce.account.internal.upgrade.v1_2_0.CommerceAccountGroupCommerceAccountRelUpgradeProcess in 24 ms 2019-08-13 18:26:26.116 INFO [main][UpgradeProcess:93] Upgrading com.liferay.commerce.account.internal.upgrade.v1_2_0.CommerceAccountGroupRelUpgradeProcess 2019-08-13 18:26:26.124 INFO [main][UpgradeProcess:107] Completed upgrade process com.liferay.commerce.account.internal.upgrade.v1_2_0.CommerceAccountGroupRelUpgradeProcess in 8 ms 2019-08-13 18:26:26.130 INFO [main][UpgradeProcess:93] Upgrading com.liferay.commerce.account.internal.upgrade.v1_2_0.CommerceAccountGroupUpgradeProcess 2019-08-13 18:26:26.142 INFO [main][UpgradeProcess:107] Completed upgrade process com.liferay.commerce.account.internal.upgrade.v1_2_0.CommerceAccountGroupUpgradeProcess in 12 ms 2019-08-13 18:26:26.148 INFO [main][UpgradeProcess:93] Upgrading com.liferay.commerce.account.internal.upgrade.v1_3_0.CommerceAccountNameUpgradeProcess 2019-08-13 18:26:26.160 INFO [main][LoggingTimer:83] Starting com.liferay.portal.kernel.upgrade.UpgradeProcess#alter 2019-08-13 18:26:26.200 INFO [main][LoggingTimer:43] Completed com.liferay.portal.kernel.upgrade.UpgradeProcess#alter in 40 ms 2019-08-13 18:26:26.208 INFO [main][UpgradeProcess:107] Completed upgrade process com.liferay.commerce.account.internal.upgrade.v1_3_0.CommerceAccountNameUpgradeProcess in 60 ms 2019-08-13 18:26:26.246 INFO [main][LoggingTimer:83] Starting com.liferay.portal.upgrade.internal.index.updater.IndexUpdaterUtil#updateIndexes#Updating database indexes for com.liferay.commerce.account.service 2019-08-13 18:26:26.346 INFO [main][BaseDB:812] Dropping stale indexes 2019-08-13 18:26:26.400 INFO [main][BaseDB:84] Adding indexes 2019-08-13 18:28:19.439 INFO [main][VerifyProcess:65] Verifying com.liferay.commerce.product.internal.verify.CommerceCatalogServiceVerifyProcess 2019-08-13 18:28:19.443 INFO [main][LoggingTimer:83] Starting com.liferay.commerce.product.internal.verify.CommerceCatalogServiceVerifyProcess#verifyMasterCommerceCatalog 2019-08-13 18:28:19.445 INFO [main][LoggingTimer:43] Completed com.liferay.commerce.product.internal.verify.CommerceCatalogServiceVerifyProcess#verifyMasterCommerceCatalog in 2 ms 2019-08-13 18:28:19.446 INFO [main][VerifyProcess:80] Completed verification process com.liferay.commerce.product.internal.verify.CommerceCatalogServiceVerifyProcess in 7 ms 2019-08-13 18:28:32.471 INFO [main][ThemeHotDeployListener:108] 1 theme for admin-theme is available for use 2019-08-13 18:28:34.296 INFO [main][ThemeHotDeployListener:108] 1 theme for classic-theme is available for use 2019-08-13 18:28:38.667 INFO [main][ThemeHotDeployListener:108] 1 theme for minium-theme is available for use The Liferay Commerce instance has been upgraded. Execute Post-Upgrade Reindex After upgrading from Liferay Commerce 1.1.x to the latest version, it is necessary to execute a full search reindex because of product changes between major versions. To execute a search reindex: Navigate to the Control Panel \u2192 Configuration \u2192 Search . Click Execute next to Reindex all search indexes . Wait for the reindex to finish. Navigate to the Control Panel \u2192 Commerce \u2192 Products . Verify all the products are displayed again. Once reindexing is complete, the new Liferay Commerce instance is ready for use. Additional Information Installing Apps Manually Liferay Commerce Fix Delivery Method","title":"Upgrading from Liferay Commerce 1.1.x"},{"location":"Commerce/Installation-and-Upgrades/Upgrades-and-Updates/Upgrading-From-Liferay-Commerce-1.1.x/#upgrading-from-liferay-commerce-11x","text":"This article documents how to upgrade Liferay Commerce to the latest maintenance version. Store administrators should consider regularly updating to the latest available maintenance version to receive bug fixes and new features.","title":"Upgrading from Liferay Commerce 1.1.x"},{"location":"Commerce/Installation-and-Upgrades/Upgrades-and-Updates/Upgrading-From-Liferay-Commerce-1.1.x/#roadmap","text":"Download and Deploy. Clear Stale Data and Verify the Upgrade Process. Execute Post-Upgrade Reindex.","title":"Roadmap"},{"location":"Commerce/Installation-and-Upgrades/Upgrades-and-Updates/Upgrading-From-Liferay-Commerce-1.1.x/#download-and-deploy","text":"Download the latest Liferay Commerce LPKG from Help Center . >The latest open source LPKG may be obtained from the Liferay Commerce Community Download Page . Deploy the LPKG to the ${liferay.home}/deploy folder. > To learn more about deploying applications to Liferay DXP, see Liferay Home . Verify that that the following message appears in the application server console: 2019-08-12 21:53:43.847 INFO [com.liferay.portal.kernel.deploy.auto.AutoDeployScanner][AutoDeployDir:261] Processing Liferay Commerce Enterprise 2.0.4.lpkg 2019-08-13 18:12:56.713 INFO [fileinstall-/../../liferay-commerce-enterprise-1.1.6/osgi/marketplace][LPKGArtifactInstaller:202] The portal instance needs to be restarted to complete the installation of file:/../../liferay-commerce-enterprise-1.1.6/osgi/marketplace/Liferay%20Commerce%20-%20API.lpkg 2019-08-13 18:12:56.715 INFO [fileinstall-/../../liferay-commerce-enterprise-1.1.6/osgi/marketplace][LPKGArtifactInstaller:202] The portal instance needs to be restarted to complete the installation of file:/../../liferay-commerce-enterprise-1.1.6/osgi/marketplace/Liferay%20Commerce%20-%20Impl.lpkg Shut down the application server.","title":"Download and Deploy"},{"location":"Commerce/Installation-and-Upgrades/Upgrades-and-Updates/Upgrading-From-Liferay-Commerce-1.1.x/#clear-stale-data-and-verify-the-upgrade-process","text":"Delete the ${liferay.home}/osgi/state folder. > To learn more about OSGi folders, see Installing Apps Manually . Start the application server. Verify that the the upgrade process has begun by looking for messages similar to this in your application server console logs: 2019-08-13 18:26:26.082 INFO [main][UpgradeProcess:93] Upgrading com.liferay.commerce.account.internal.upgrade.v1_2_0.CommerceAccountGroupCommerceAccountRelUpgradeProcess 2019-08-13 18:26:26.106 INFO [main][UpgradeProcess:107] Completed upgrade process com.liferay.commerce.account.internal.upgrade.v1_2_0.CommerceAccountGroupCommerceAccountRelUpgradeProcess in 24 ms 2019-08-13 18:26:26.116 INFO [main][UpgradeProcess:93] Upgrading com.liferay.commerce.account.internal.upgrade.v1_2_0.CommerceAccountGroupRelUpgradeProcess 2019-08-13 18:26:26.124 INFO [main][UpgradeProcess:107] Completed upgrade process com.liferay.commerce.account.internal.upgrade.v1_2_0.CommerceAccountGroupRelUpgradeProcess in 8 ms 2019-08-13 18:26:26.130 INFO [main][UpgradeProcess:93] Upgrading com.liferay.commerce.account.internal.upgrade.v1_2_0.CommerceAccountGroupUpgradeProcess 2019-08-13 18:26:26.142 INFO [main][UpgradeProcess:107] Completed upgrade process com.liferay.commerce.account.internal.upgrade.v1_2_0.CommerceAccountGroupUpgradeProcess in 12 ms 2019-08-13 18:26:26.148 INFO [main][UpgradeProcess:93] Upgrading com.liferay.commerce.account.internal.upgrade.v1_3_0.CommerceAccountNameUpgradeProcess 2019-08-13 18:26:26.160 INFO [main][LoggingTimer:83] Starting com.liferay.portal.kernel.upgrade.UpgradeProcess#alter 2019-08-13 18:26:26.200 INFO [main][LoggingTimer:43] Completed com.liferay.portal.kernel.upgrade.UpgradeProcess#alter in 40 ms 2019-08-13 18:26:26.208 INFO [main][UpgradeProcess:107] Completed upgrade process com.liferay.commerce.account.internal.upgrade.v1_3_0.CommerceAccountNameUpgradeProcess in 60 ms 2019-08-13 18:26:26.246 INFO [main][LoggingTimer:83] Starting com.liferay.portal.upgrade.internal.index.updater.IndexUpdaterUtil#updateIndexes#Updating database indexes for com.liferay.commerce.account.service 2019-08-13 18:26:26.346 INFO [main][BaseDB:812] Dropping stale indexes 2019-08-13 18:26:26.400 INFO [main][BaseDB:84] Adding indexes 2019-08-13 18:28:19.439 INFO [main][VerifyProcess:65] Verifying com.liferay.commerce.product.internal.verify.CommerceCatalogServiceVerifyProcess 2019-08-13 18:28:19.443 INFO [main][LoggingTimer:83] Starting com.liferay.commerce.product.internal.verify.CommerceCatalogServiceVerifyProcess#verifyMasterCommerceCatalog 2019-08-13 18:28:19.445 INFO [main][LoggingTimer:43] Completed com.liferay.commerce.product.internal.verify.CommerceCatalogServiceVerifyProcess#verifyMasterCommerceCatalog in 2 ms 2019-08-13 18:28:19.446 INFO [main][VerifyProcess:80] Completed verification process com.liferay.commerce.product.internal.verify.CommerceCatalogServiceVerifyProcess in 7 ms 2019-08-13 18:28:32.471 INFO [main][ThemeHotDeployListener:108] 1 theme for admin-theme is available for use 2019-08-13 18:28:34.296 INFO [main][ThemeHotDeployListener:108] 1 theme for classic-theme is available for use 2019-08-13 18:28:38.667 INFO [main][ThemeHotDeployListener:108] 1 theme for minium-theme is available for use The Liferay Commerce instance has been upgraded.","title":"Clear Stale Data and Verify the Upgrade Process"},{"location":"Commerce/Installation-and-Upgrades/Upgrades-and-Updates/Upgrading-From-Liferay-Commerce-1.1.x/#execute-post-upgrade-reindex","text":"After upgrading from Liferay Commerce 1.1.x to the latest version, it is necessary to execute a full search reindex because of product changes between major versions. To execute a search reindex: Navigate to the Control Panel \u2192 Configuration \u2192 Search . Click Execute next to Reindex all search indexes . Wait for the reindex to finish. Navigate to the Control Panel \u2192 Commerce \u2192 Products . Verify all the products are displayed again. Once reindexing is complete, the new Liferay Commerce instance is ready for use.","title":"Execute Post-Upgrade Reindex"},{"location":"Commerce/Installation-and-Upgrades/Upgrades-and-Updates/Upgrading-From-Liferay-Commerce-1.1.x/#additional-information","text":"Installing Apps Manually Liferay Commerce Fix Delivery Method","title":"Additional Information"},{"location":"Commerce/User-Guide/Getting-Started/accelerators/","text":"Accelerators Liferay Commerce Accelerators make building stores and exploring Liferay Commerce fast and easy. Note : Users who want to build their store from scratch are recommended to review the Store Setup Overview . Stores in Liferay Commerce are comprised of an interrelated hierarchy of components: Sites, Channels, Catalogs, Products, Pages, and Widgets. An Accelerator quickly and easily sets up a functional store by providing a pre-configured Site Template with a hierarchy of store components, a theme, pre-set store configurations, and sample data. Liferay Commerce comes with Minium, a B2B site accelerator, out-of-the-box. To use an Accelerator: Go to Control Panel \u2192 Sites \u2192 Sites . Click the (+) button to add a new site. Choose an Accelerator (Minium). Enter a name: Your Site . Click Save . In the Site Menu click Go to Site . Your accelerated site has been created. Additional Information Using the Minium Accelerator to Jump Start a B2B Store","title":"Accelerators"},{"location":"Commerce/User-Guide/Getting-Started/accelerators/#accelerators","text":"Liferay Commerce Accelerators make building stores and exploring Liferay Commerce fast and easy. Note : Users who want to build their store from scratch are recommended to review the Store Setup Overview . Stores in Liferay Commerce are comprised of an interrelated hierarchy of components: Sites, Channels, Catalogs, Products, Pages, and Widgets. An Accelerator quickly and easily sets up a functional store by providing a pre-configured Site Template with a hierarchy of store components, a theme, pre-set store configurations, and sample data. Liferay Commerce comes with Minium, a B2B site accelerator, out-of-the-box. To use an Accelerator: Go to Control Panel \u2192 Sites \u2192 Sites . Click the (+) button to add a new site. Choose an Accelerator (Minium). Enter a name: Your Site . Click Save . In the Site Menu click Go to Site . Your accelerated site has been created.","title":"Accelerators"},{"location":"Commerce/User-Guide/Getting-Started/accelerators/#additional-information","text":"Using the Minium Accelerator to Jump Start a B2B Store","title":"Additional Information"},{"location":"Commerce/User-Guide/Getting-Started/store-setup-overview/","text":"Store Setup Overview Introduction This article is intended to provide a walk through for users who are new to building a store in Liferay Commerce. It assumes that Liferay Commerce (and Liferay DXP) have been appropriately installed and configured. For more information on installation, see the Installation Overview . Road Map Store Setup Creating the Storefront Managing Customer Accounts Managing Orders and Shipments Store Setup Note : An Accelerator may be used to create the store site. Using an Accelerator to create the store site will configure many of the settings mentioned in this section, see Using the Minium Accelerator to Jump Start Your B2B Store for further details. Initial store setup is done with the Admin account . Read the Liferay Commerce Configuration Overview to become more familiar with the Liferay Commerce configuration layout and available options. Configure Global Commerce Settings Global configurations for Liferay Commerce include setting the store timezone, available languages, adding regions and region specific measurement units, and more. Learn more from the following articles: Setting Locale Options Adding Regions Setting up Warehouses Creating Channels Create a Store Site Liferay Commerce supports B2B, B2C, and B2C-B2B stores. Site Types designate a store's business model and will determine how the storefront works with Accounts. Liferay Commerce is built on Liferay DXP; For more information about how Liferay DXP Sites work, see Building a Site . Configure Store Site Commerce Settings The following sections cover configurations that are store site specific. Accepting Payment Liferay Commerce provides support for several third party payment processors and also allows for the use of money orders to accept payment. See: Payments Managing Payment Methods Authorize.net PayPal Mercanet Money Orders Collecting Applicable Taxes In order to collect the applicable taxes, Liferay Commerce has the ability to create tax categories and to set tax rates by address or by a fixed rate. Creating Tax Categories Setting Tax Rate by Address Setting Tax Rate by Fixed Rate Shipping Products Liferay Commerce has several options to calculate shipping rates. Commerce Enterprise subscribers receive FedEx carrier integration out-of-the-box. Shipping Methods Variable Rate Flat Rate Using FedEx as a Carrier Creating the Catalog After setting up the store, begin creating a catalog . Adding Products to a Catalog When adding a product, there are three product types: Simple , Grouped , and Virtual . See the Introduction to Product Types for more information. Adding Product Information The Liferay Commerce Catalog supports storing and managing a wide variety of product information. The following articles cover some of the available options: Product Options Product Specifications Product Images Product Attachments Product Relations Product Categorization Availability Estimates Low Stock Activity Applicable Tax Category Associated Channels Associated Account Groups BOM / Spare Parts Product Pricing There are several ways to price products and these methods are related to one another in a pricing hierarchy: base price, price list, tiered price, promo price and discount. Pricing is managed per SKU. Pricing Price Lists Discounts Managing Inventory Introduction to Managing Inventory Subscriptions (if applicable) Creating the Storefront Building a store in Liferay Commerce requires more than a complete catalog. Store administrators building a storefront from scratch will need to add a series of pages to display and sell their products. See Creating Your Storefront to learn more. Managing Customer Accounts To learn more about how accounts, inviting users accounts, account roles, and more, read the following articles: Introduction to Accounts Creating a New Account Inviting Users to an Account Adding Addresses to an Account Account Roles Assigning Account Roles Creating a New Account Group Managing Orders and Shipments When an order has been received, the order may be transmitted to an ERP and optionally to a CRM. Once the requested goods are available for shipping, the store's inventory specialists may track the shipment. See the following articles to learn about the life cycle of an order and the shipment processes. Order Life Cycle Introduction to Shipments Creating a shipment Cancelling a Shipment Shipping Override","title":"Store Setup Overview"},{"location":"Commerce/User-Guide/Getting-Started/store-setup-overview/#store-setup-overview","text":"","title":"Store Setup Overview"},{"location":"Commerce/User-Guide/Getting-Started/store-setup-overview/#introduction","text":"This article is intended to provide a walk through for users who are new to building a store in Liferay Commerce. It assumes that Liferay Commerce (and Liferay DXP) have been appropriately installed and configured. For more information on installation, see the Installation Overview .","title":"Introduction"},{"location":"Commerce/User-Guide/Getting-Started/store-setup-overview/#road-map","text":"Store Setup Creating the Storefront Managing Customer Accounts Managing Orders and Shipments","title":"Road Map"},{"location":"Commerce/User-Guide/Getting-Started/store-setup-overview/#store-setup","text":"Note : An Accelerator may be used to create the store site. Using an Accelerator to create the store site will configure many of the settings mentioned in this section, see Using the Minium Accelerator to Jump Start Your B2B Store for further details. Initial store setup is done with the Admin account . Read the Liferay Commerce Configuration Overview to become more familiar with the Liferay Commerce configuration layout and available options.","title":"Store Setup"},{"location":"Commerce/User-Guide/Getting-Started/store-setup-overview/#configure-global-commerce-settings","text":"Global configurations for Liferay Commerce include setting the store timezone, available languages, adding regions and region specific measurement units, and more. Learn more from the following articles: Setting Locale Options Adding Regions Setting up Warehouses Creating Channels","title":"Configure Global Commerce Settings"},{"location":"Commerce/User-Guide/Getting-Started/store-setup-overview/#create-a-store-site","text":"Liferay Commerce supports B2B, B2C, and B2C-B2B stores. Site Types designate a store's business model and will determine how the storefront works with Accounts. Liferay Commerce is built on Liferay DXP; For more information about how Liferay DXP Sites work, see Building a Site .","title":"Create a Store Site"},{"location":"Commerce/User-Guide/Getting-Started/store-setup-overview/#configure-store-site-commerce-settings","text":"The following sections cover configurations that are store site specific.","title":"Configure Store Site Commerce Settings"},{"location":"Commerce/User-Guide/Getting-Started/store-setup-overview/#accepting-payment","text":"Liferay Commerce provides support for several third party payment processors and also allows for the use of money orders to accept payment. See: Payments Managing Payment Methods Authorize.net PayPal Mercanet Money Orders","title":"Accepting Payment"},{"location":"Commerce/User-Guide/Getting-Started/store-setup-overview/#collecting-applicable-taxes","text":"In order to collect the applicable taxes, Liferay Commerce has the ability to create tax categories and to set tax rates by address or by a fixed rate. Creating Tax Categories Setting Tax Rate by Address Setting Tax Rate by Fixed Rate","title":"Collecting Applicable Taxes"},{"location":"Commerce/User-Guide/Getting-Started/store-setup-overview/#shipping-products","text":"Liferay Commerce has several options to calculate shipping rates. Commerce Enterprise subscribers receive FedEx carrier integration out-of-the-box. Shipping Methods Variable Rate Flat Rate Using FedEx as a Carrier","title":"Shipping Products"},{"location":"Commerce/User-Guide/Getting-Started/store-setup-overview/#creating-the-catalog","text":"After setting up the store, begin creating a catalog .","title":"Creating the Catalog"},{"location":"Commerce/User-Guide/Getting-Started/store-setup-overview/#adding-products-to-a-catalog","text":"When adding a product, there are three product types: Simple , Grouped , and Virtual . See the Introduction to Product Types for more information.","title":"Adding Products to a Catalog"},{"location":"Commerce/User-Guide/Getting-Started/store-setup-overview/#adding-product-information","text":"The Liferay Commerce Catalog supports storing and managing a wide variety of product information. The following articles cover some of the available options: Product Options Product Specifications Product Images Product Attachments Product Relations Product Categorization Availability Estimates Low Stock Activity Applicable Tax Category Associated Channels Associated Account Groups BOM / Spare Parts","title":"Adding Product Information"},{"location":"Commerce/User-Guide/Getting-Started/store-setup-overview/#product-pricing","text":"There are several ways to price products and these methods are related to one another in a pricing hierarchy: base price, price list, tiered price, promo price and discount. Pricing is managed per SKU. Pricing Price Lists Discounts","title":"Product Pricing"},{"location":"Commerce/User-Guide/Getting-Started/store-setup-overview/#managing-inventory","text":"Introduction to Managing Inventory Subscriptions (if applicable)","title":"Managing Inventory"},{"location":"Commerce/User-Guide/Getting-Started/store-setup-overview/#creating-the-storefront","text":"Building a store in Liferay Commerce requires more than a complete catalog. Store administrators building a storefront from scratch will need to add a series of pages to display and sell their products. See Creating Your Storefront to learn more.","title":"Creating the Storefront"},{"location":"Commerce/User-Guide/Getting-Started/store-setup-overview/#managing-customer-accounts","text":"To learn more about how accounts, inviting users accounts, account roles, and more, read the following articles: Introduction to Accounts Creating a New Account Inviting Users to an Account Adding Addresses to an Account Account Roles Assigning Account Roles Creating a New Account Group","title":"Managing Customer Accounts"},{"location":"Commerce/User-Guide/Getting-Started/store-setup-overview/#managing-orders-and-shipments","text":"When an order has been received, the order may be transmitted to an ERP and optionally to a CRM. Once the requested goods are available for shipping, the store's inventory specialists may track the shipment. See the following articles to learn about the life cycle of an order and the shipment processes. Order Life Cycle Introduction to Shipments Creating a shipment Cancelling a Shipment Shipping Override","title":"Managing Orders and Shipments"},{"location":"Commerce/User-Guide/Getting-Started/using-the-minium-accelerator-to-jump-start-a-b2b-store/","text":"Using the Minium Accelerator to Jump-Start a B2B Store Minium is a Liferay Commerce Accelerator that quickly and easily sets up a business-to-business (B2B) store designed to meet the needs of a manufacturer. The accelerator accomplishes this by providing the base hierarchy of site pages and design, sample data, and configurations for a site in a single action. Minium also highlights Liferay Commerce's B2B Account Management functionality, enabling streamlined account management and self-service through the use of Account Roles , Account Groups , and Order Workflows . This article serves as a walk-through for the main features of the Minium Accelerator. Pages and Design Pages Minium populates a site with several pages and widgets, providing a complete user experience for buyers. To see the full list of pages created, go to Site Menu \u2192 Build \u2192 Pages . In general, these pages work as described here, with some differences. For example, instead of using a dedicated categories page, the site's homepage displays the entire contents of the catalog. To display products of a single category, select a checkbox in the Category Facet widget. Design The Minium accelerator includes a number of embedded features, including pop-up navigation and cart menus, and an Account selector. The navigation menu provides links to the catalog, pending and past orders, and account management, while the cart menu displays the current order. Minium does not use a conventional cart page. Instead, a link to the checkout page is included in the theme-embedded cart menu. The Account selector displays accounts that the current user can access (administrators can access any account). Once an account is selected, its open orders are displayed. Catalog Data Minium's sample catalog includes a range of sample products organized into several pre-defined categories: Note that Categories are defined at the Global scope level. For more information see Product Categories . Sample products also come with pre-set Options , Specifications , and Images. Other Configurations Minium applies a number of other site configurations that are not set out-of-the-box for a blank site. The following table provides a list of notable additions or configurations that Minium makes to jump-start a B2B store: Feature Details Warehouses Italy, United States Northeast, United States Southwest Site Type B2B Shipping Method Options Standard Delivery, Expedited Delivery Channels Minium Portal Countries France, China, United States, and 245 more Currencies USD, AUD, GBP, and 7 more Default Image \u2713 Measurement Units - Dimensions inches, millimeters, feet, meters Measurement Units - Weight ounces, pounds, kilograms, grams Account Roles Buyer, Account Manager, Sales Agent Availability Estimates 3-5 days, 5-7 days, 7-14 days Product Relation Type Up-Sell, Spare, Related, Accessories, Cross-Sell","title":"Using the Minium Accelerator to Jump-Start a B2B Store"},{"location":"Commerce/User-Guide/Getting-Started/using-the-minium-accelerator-to-jump-start-a-b2b-store/#using-the-minium-accelerator-to-jump-start-a-b2b-store","text":"Minium is a Liferay Commerce Accelerator that quickly and easily sets up a business-to-business (B2B) store designed to meet the needs of a manufacturer. The accelerator accomplishes this by providing the base hierarchy of site pages and design, sample data, and configurations for a site in a single action. Minium also highlights Liferay Commerce's B2B Account Management functionality, enabling streamlined account management and self-service through the use of Account Roles , Account Groups , and Order Workflows . This article serves as a walk-through for the main features of the Minium Accelerator.","title":"Using the Minium Accelerator to Jump-Start a B2B Store"},{"location":"Commerce/User-Guide/Getting-Started/using-the-minium-accelerator-to-jump-start-a-b2b-store/#pages-and-design","text":"","title":"Pages and Design"},{"location":"Commerce/User-Guide/Getting-Started/using-the-minium-accelerator-to-jump-start-a-b2b-store/#pages","text":"Minium populates a site with several pages and widgets, providing a complete user experience for buyers. To see the full list of pages created, go to Site Menu \u2192 Build \u2192 Pages . In general, these pages work as described here, with some differences. For example, instead of using a dedicated categories page, the site's homepage displays the entire contents of the catalog. To display products of a single category, select a checkbox in the Category Facet widget.","title":"Pages"},{"location":"Commerce/User-Guide/Getting-Started/using-the-minium-accelerator-to-jump-start-a-b2b-store/#design","text":"The Minium accelerator includes a number of embedded features, including pop-up navigation and cart menus, and an Account selector. The navigation menu provides links to the catalog, pending and past orders, and account management, while the cart menu displays the current order. Minium does not use a conventional cart page. Instead, a link to the checkout page is included in the theme-embedded cart menu. The Account selector displays accounts that the current user can access (administrators can access any account). Once an account is selected, its open orders are displayed.","title":"Design"},{"location":"Commerce/User-Guide/Getting-Started/using-the-minium-accelerator-to-jump-start-a-b2b-store/#catalog-data","text":"Minium's sample catalog includes a range of sample products organized into several pre-defined categories: Note that Categories are defined at the Global scope level. For more information see Product Categories . Sample products also come with pre-set Options , Specifications , and Images.","title":"Catalog Data"},{"location":"Commerce/User-Guide/Getting-Started/using-the-minium-accelerator-to-jump-start-a-b2b-store/#other-configurations","text":"Minium applies a number of other site configurations that are not set out-of-the-box for a blank site. The following table provides a list of notable additions or configurations that Minium makes to jump-start a B2B store: Feature Details Warehouses Italy, United States Northeast, United States Southwest Site Type B2B Shipping Method Options Standard Delivery, Expedited Delivery Channels Minium Portal Countries France, China, United States, and 245 more Currencies USD, AUD, GBP, and 7 more Default Image \u2713 Measurement Units - Dimensions inches, millimeters, feet, meters Measurement Units - Weight ounces, pounds, kilograms, grams Account Roles Buyer, Account Manager, Sales Agent Availability Estimates 3-5 days, 5-7 days, 7-14 days Product Relation Type Up-Sell, Spare, Related, Accessories, Cross-Sell","title":"Other Configurations"},{"location":"Commerce/User-Guide/catalog/introduction-to-channels/","text":"Introduction to Channels Liferay Commerce provides tools designed to meet the needs of complex B2B, multi-region, and multi-market stores and simpler B2C use cases. One way that Commerce enables a wide variety of use cases is through the Channels feature. In Liferay Commerce, Channels connect Catalogs and Products to any place products are sold: a Liferay Commerce based storefront, third party marketplaces, or even back office phone sales. Using Channels, store administrators are able to manage product availability, sales, and fulfillment by Site and eventually by Country, Region, or Account Group. In a simple store example, all of a company's products are managed in one catalog and those products are distributed through a single channel: the company store site. A simple commerce store example. In a more complex multi-channel scenario, a company may choose to customize the availability and marketing of certain products in its catalog for each of its various channels. A more complex use case using multiple Channels. Liferay Commerce Channels makes managing products, sales, and fulfillment on a single platform simple. See Configuring Product Visibility by Site Using Channels for more information. Product level configurations to scope product visibility to specific Channels. Additional Information Managing Channels Configuring Product Visibility by Site Using Channels","title":"Introduction to Channels"},{"location":"Commerce/User-Guide/catalog/introduction-to-channels/#introduction-to-channels","text":"Liferay Commerce provides tools designed to meet the needs of complex B2B, multi-region, and multi-market stores and simpler B2C use cases. One way that Commerce enables a wide variety of use cases is through the Channels feature. In Liferay Commerce, Channels connect Catalogs and Products to any place products are sold: a Liferay Commerce based storefront, third party marketplaces, or even back office phone sales. Using Channels, store administrators are able to manage product availability, sales, and fulfillment by Site and eventually by Country, Region, or Account Group. In a simple store example, all of a company's products are managed in one catalog and those products are distributed through a single channel: the company store site. A simple commerce store example. In a more complex multi-channel scenario, a company may choose to customize the availability and marketing of certain products in its catalog for each of its various channels. A more complex use case using multiple Channels. Liferay Commerce Channels makes managing products, sales, and fulfillment on a single platform simple. See Configuring Product Visibility by Site Using Channels for more information. Product level configurations to scope product visibility to specific Channels.","title":"Introduction to Channels"},{"location":"Commerce/User-Guide/catalog/introduction-to-channels/#additional-information","text":"Managing Channels Configuring Product Visibility by Site Using Channels","title":"Additional Information"},{"location":"Commerce/User-Guide/catalog/introduction-to-product-types/","text":"Introduction to Product Types The catalog supports three product types: Simple, Grouped, and Virtual. Simple Product : Any physical product for which inventory is tracked. Grouped Product : Two or more products from the catalog, packaged together to be sold as a single item. Grouped products are not tracked in inventory. Instead, the catalog tracks all of the products contained in the group individually. A grouped product can contain Simple Products, other Grouped Products, or Virtual Products. Virtual Products : A virtual product is any non-physical product. Typically, a virtual product\u2019s inventory is not tracked. This may mean that the product is downloaded rather than shipped. Music files, electronic publications, services, and warranties can all be considered virtual goods. Product Detail Reference Field Description Catalog Catalog associated with the product - this association is permanent Name Product Name Short Description Short summary of the product Full Description Longer description of the product SEO Field Description Friendly URL The URL for the product page Meta Title Product title to help search engines locate your products Meta Description Product description used by search engines Meta Keyword Keywords used by search engines Schedule Field Description Published Checkbox to enable publication Display Date Date the product is published to the Catalog Expiration Date Determines when the product will no longer be available, if Never Expire is unchecked Never Expire Determines if a product can be scheduled for expiration Additional Information Creating a Simple Product Creating a Grouped Product Creating a Virtual Product Virtual Product Reference","title":"Introduction to Product Types"},{"location":"Commerce/User-Guide/catalog/introduction-to-product-types/#introduction-to-product-types","text":"The catalog supports three product types: Simple, Grouped, and Virtual. Simple Product : Any physical product for which inventory is tracked. Grouped Product : Two or more products from the catalog, packaged together to be sold as a single item. Grouped products are not tracked in inventory. Instead, the catalog tracks all of the products contained in the group individually. A grouped product can contain Simple Products, other Grouped Products, or Virtual Products. Virtual Products : A virtual product is any non-physical product. Typically, a virtual product\u2019s inventory is not tracked. This may mean that the product is downloaded rather than shipped. Music files, electronic publications, services, and warranties can all be considered virtual goods.","title":"Introduction to Product Types"},{"location":"Commerce/User-Guide/catalog/introduction-to-product-types/#product-detail-reference","text":"Field Description Catalog Catalog associated with the product - this association is permanent Name Product Name Short Description Short summary of the product Full Description Longer description of the product","title":"Product Detail Reference"},{"location":"Commerce/User-Guide/catalog/introduction-to-product-types/#seo","text":"Field Description Friendly URL The URL for the product page Meta Title Product title to help search engines locate your products Meta Description Product description used by search engines Meta Keyword Keywords used by search engines","title":"SEO"},{"location":"Commerce/User-Guide/catalog/introduction-to-product-types/#schedule","text":"Field Description Published Checkbox to enable publication Display Date Date the product is published to the Catalog Expiration Date Determines when the product will no longer be available, if Never Expire is unchecked Never Expire Determines if a product can be scheduled for expiration","title":"Schedule"},{"location":"Commerce/User-Guide/catalog/introduction-to-product-types/#additional-information","text":"Creating a Simple Product Creating a Grouped Product Creating a Virtual Product Virtual Product Reference","title":"Additional Information"},{"location":"Commerce/User-Guide/content/creating-your-storefront/","text":"Creating Your Storefront Building a store in Liferay Commerce requires more than a complete catalog. Store administrators building a storefront from scratch will need to add a series of pages to display and sell their products. This article serves as a reference for pages that may be created for a functional storefront. Using an Accelerator , such as Minium will create these pages for the user. Liferay Commerce is built on Liferay DXP - click to learn more about Creating Pages . The following types of pages may be created: Page Name Purpose Widget(s) Used Account Management Page where store administrators can manage Users and Accounts Accounts Catalog Main page where customers can search for products and refine their search results. Search , Option Facet , Specification Facet , Category Facet and Search Results . Cart Displays all items in the shopping cart Cart , Cart Summary , Mini Cart Checkout Displays a summary of all selected goods for purchase Checkout Compare Displays a side by side comparison of the different selected products Cart List Displays the customer's Wish Lists Wish Lists and Wish List Contents Pending Orders Displays a list of all pending orders Open Carts Placed Orders Displays a list of all orders in all statuses Orders Product Details Displays information about the product and related products Product Details and Product Publisher Search Allows users to search Search , Tag , Category Facet , Option Facet , Specification Facet Spare Parts Finder / BOM Displays a list of materials that make up a particular product Commerce BOM Additional Information Widget Reference Guide Creating Pages","title":"Creating Your Storefront"},{"location":"Commerce/User-Guide/content/creating-your-storefront/#creating-your-storefront","text":"Building a store in Liferay Commerce requires more than a complete catalog. Store administrators building a storefront from scratch will need to add a series of pages to display and sell their products. This article serves as a reference for pages that may be created for a functional storefront. Using an Accelerator , such as Minium will create these pages for the user. Liferay Commerce is built on Liferay DXP - click to learn more about Creating Pages . The following types of pages may be created: Page Name Purpose Widget(s) Used Account Management Page where store administrators can manage Users and Accounts Accounts Catalog Main page where customers can search for products and refine their search results. Search , Option Facet , Specification Facet , Category Facet and Search Results . Cart Displays all items in the shopping cart Cart , Cart Summary , Mini Cart Checkout Displays a summary of all selected goods for purchase Checkout Compare Displays a side by side comparison of the different selected products Cart List Displays the customer's Wish Lists Wish Lists and Wish List Contents Pending Orders Displays a list of all pending orders Open Carts Placed Orders Displays a list of all orders in all statuses Orders Product Details Displays information about the product and related products Product Details and Product Publisher Search Allows users to search Search , Tag , Category Facet , Option Facet , Specification Facet Spare Parts Finder / BOM Displays a list of materials that make up a particular product Commerce BOM","title":"Creating Your Storefront"},{"location":"Commerce/User-Guide/content/creating-your-storefront/#additional-information","text":"Widget Reference Guide Creating Pages","title":"Additional Information"},{"location":"Commerce/User-Guide/customers/Introduction-to-Accounts/","text":"Introduction to Accounts In Liferay Commerce, accounts store information about customers and are used to manage and empower business representatives to provide great customer service experiences. Accounts store information including but not limited to: billing address, shipping address, payment information, order information, VAT number (as applicable). There are two types of accounts: Business and Personal. How these accounts function in a store will vary depending on the configured Site Type . Account Types Business Accounts : For the B2B site type, an individual customer must be assigned to a Business account in order to make a purchase. Multiple users may be associated with a single business account and these users can be assigned unique Account Roles . Personal Accounts : For the B2C site type, individual authenticated customers will automatically be associated with a Personal account and be able to make purchases. Note : Liferay User Account Profile information is only imported at the time of Personal Account creation, further updates to a Liferay User Account Profile are not propagated to the Personal Account. Managing and Empowering Accounts There are two ways to manage accounts: 1) using the Account Management widget and 2) through the Control Panel . Access to the Control Panel is typically restricted to those with administrative permissions for the store or installation. Accounts and their associated users may be managed through the Account Management widget. Accounts and their associated users may also be managed through the Accounts widget in the Control Panel . Accounts may also be grouped together as needed to facilitate account management or marketing needs. See Creating a New Account Group for more information. Finally, individual users associated with a given Business Account may be given Account Roles to delegate and self-service their accounts for their business. For more information see Account Roles Common Account Management Actions See the following articles to learn more about common Account Management actions: Creating a New Account Inviting Users to an Account Assigning Account Roles Adding Addresses to an Account Creating a New Account Group Additional Information Sites and Site Types Account Roles","title":"Introduction to Accounts"},{"location":"Commerce/User-Guide/customers/Introduction-to-Accounts/#introduction-to-accounts","text":"In Liferay Commerce, accounts store information about customers and are used to manage and empower business representatives to provide great customer service experiences. Accounts store information including but not limited to: billing address, shipping address, payment information, order information, VAT number (as applicable). There are two types of accounts: Business and Personal. How these accounts function in a store will vary depending on the configured Site Type .","title":"Introduction to Accounts"},{"location":"Commerce/User-Guide/customers/Introduction-to-Accounts/#account-types","text":"Business Accounts : For the B2B site type, an individual customer must be assigned to a Business account in order to make a purchase. Multiple users may be associated with a single business account and these users can be assigned unique Account Roles . Personal Accounts : For the B2C site type, individual authenticated customers will automatically be associated with a Personal account and be able to make purchases. Note : Liferay User Account Profile information is only imported at the time of Personal Account creation, further updates to a Liferay User Account Profile are not propagated to the Personal Account.","title":"Account Types"},{"location":"Commerce/User-Guide/customers/Introduction-to-Accounts/#managing-and-empowering-accounts","text":"There are two ways to manage accounts: 1) using the Account Management widget and 2) through the Control Panel . Access to the Control Panel is typically restricted to those with administrative permissions for the store or installation. Accounts and their associated users may be managed through the Account Management widget. Accounts and their associated users may also be managed through the Accounts widget in the Control Panel . Accounts may also be grouped together as needed to facilitate account management or marketing needs. See Creating a New Account Group for more information. Finally, individual users associated with a given Business Account may be given Account Roles to delegate and self-service their accounts for their business. For more information see Account Roles","title":"Managing and Empowering Accounts"},{"location":"Commerce/User-Guide/customers/Introduction-to-Accounts/#common-account-management-actions","text":"See the following articles to learn more about common Account Management actions: Creating a New Account Inviting Users to an Account Assigning Account Roles Adding Addresses to an Account Creating a New Account Group","title":"Common Account Management Actions"},{"location":"Commerce/User-Guide/customers/Introduction-to-Accounts/#additional-information","text":"Sites and Site Types Account Roles","title":"Additional Information"},{"location":"Commerce/User-Guide/marketing/automating-store-emails-by-using-notification-templates/","text":"Automating Store Emails by Using Notification Templates Notifications are automated emails sent to buyers. By default, notifications can only be sent to inform buyers when an order has been received. Notifications require a Notification Template. Notification Templates define the notification sender, trigger, and content of an email notification. To use Liferay Commerce's Notifications feature, system administrators first have to configure the Mail settings for Liferay Digital Experience Platform (DXP). See User Subscriptions and Mailing Lists for more information. Once the Mail settings have been configured, follow these steps to create a notification for a received order: Navigate to the Control Panel \u2192 (your store) \u2192 Commerce \u2192 Settings . Click the Notifications tab. Click the Notification Templates sub-tab. Click the (+) button to create a new Notification Template. Enter the following: Name : New Orders Description : New orders template Account Groups : US East Coast From Address : Your store's email address (for example: orders@yourstore.com ) From Name : Name of the store or a customer service representative Type : Order Placed Enabled : Switch the Toggle to YES Subject : Email subject (for example: Your order has been received. ) Body : Email body * Click Save . The new Notification Template has been saved and your store will send an automated email to buyers after the store has received their order. Once the template is created, a new notification is added to the notification queue whenever an order is placed. Check the Notifications Queue sub-tab when an order has been placed. Liferay Commerce checks the queue at specified intervals to send any unsent notifications. Additional Notifications Note 1 : * Liferay Commerce offers two snippets to insert programmatically the order creator's name and the order ID. [%ORDER_CREATOR%] inserts the user who created the order [%ORDER_CREATOR%] inserts the Order ID Note 2 : As noted above, the only out-of-the-box notification function is to send an email when an order has been received but an extension point lets you implement other notifications: for a shipped order, a restocked product, a carrier exception, or any other event. Note 3 : To change the interval for when Liferay Commerce checks for unsent notifications, navigate to the Control Menu \u2192 Configuration \u2192 System Settings . Click Orders then the Commerce Notification Queue . The default values are listed in minutes. Change the values for the Check Interval and the Delete Interval if necessary. Additional Information Adding a New Notification Type","title":"Automating Store Emails by Using Notification Templates"},{"location":"Commerce/User-Guide/marketing/automating-store-emails-by-using-notification-templates/#automating-store-emails-by-using-notification-templates","text":"Notifications are automated emails sent to buyers. By default, notifications can only be sent to inform buyers when an order has been received. Notifications require a Notification Template. Notification Templates define the notification sender, trigger, and content of an email notification. To use Liferay Commerce's Notifications feature, system administrators first have to configure the Mail settings for Liferay Digital Experience Platform (DXP). See User Subscriptions and Mailing Lists for more information. Once the Mail settings have been configured, follow these steps to create a notification for a received order: Navigate to the Control Panel \u2192 (your store) \u2192 Commerce \u2192 Settings . Click the Notifications tab. Click the Notification Templates sub-tab. Click the (+) button to create a new Notification Template. Enter the following: Name : New Orders Description : New orders template Account Groups : US East Coast From Address : Your store's email address (for example: orders@yourstore.com ) From Name : Name of the store or a customer service representative Type : Order Placed Enabled : Switch the Toggle to YES Subject : Email subject (for example: Your order has been received. ) Body : Email body * Click Save . The new Notification Template has been saved and your store will send an automated email to buyers after the store has received their order. Once the template is created, a new notification is added to the notification queue whenever an order is placed. Check the Notifications Queue sub-tab when an order has been placed. Liferay Commerce checks the queue at specified intervals to send any unsent notifications.","title":"Automating Store Emails by Using Notification Templates"},{"location":"Commerce/User-Guide/marketing/automating-store-emails-by-using-notification-templates/#additional-notifications","text":"Note 1 : * Liferay Commerce offers two snippets to insert programmatically the order creator's name and the order ID. [%ORDER_CREATOR%] inserts the user who created the order [%ORDER_CREATOR%] inserts the Order ID Note 2 : As noted above, the only out-of-the-box notification function is to send an email when an order has been received but an extension point lets you implement other notifications: for a shipped order, a restocked product, a carrier exception, or any other event. Note 3 : To change the interval for when Liferay Commerce checks for unsent notifications, navigate to the Control Menu \u2192 Configuration \u2192 System Settings . Click Orders then the Commerce Notification Queue . The default values are listed in minutes. Change the values for the Check Interval and the Delete Interval if necessary.","title":"Additional Notifications"},{"location":"Commerce/User-Guide/marketing/automating-store-emails-by-using-notification-templates/#additional-information","text":"Adding a New Notification Type","title":"Additional Information"},{"location":"Commerce/User-Guide/operations/creating-tax-categories/","text":"Creating Tax Categories Tax Categories are containers for one or more tax calculations in your store. Tax categories have to be created first before applying any type of taxes. Products can be taxed differently by assigning different tax categories to them. Go to Site Administration \u2192 Commerce \u2192 Settings . Click the Taxes tab. Click the Tax Categories sub-tab. Click the Add Tax Category button. Enter a name and a description. Click Save . The Tax Category is now available for your store. Additional Information Setting Tax Rates by Address Setting Fixed Tax Rates","title":"Creating Tax Categories"},{"location":"Commerce/User-Guide/operations/creating-tax-categories/#creating-tax-categories","text":"Tax Categories are containers for one or more tax calculations in your store. Tax categories have to be created first before applying any type of taxes. Products can be taxed differently by assigning different tax categories to them. Go to Site Administration \u2192 Commerce \u2192 Settings . Click the Taxes tab. Click the Tax Categories sub-tab. Click the Add Tax Category button. Enter a name and a description. Click Save . The Tax Category is now available for your store.","title":"Creating Tax Categories"},{"location":"Commerce/User-Guide/operations/creating-tax-categories/#additional-information","text":"Setting Tax Rates by Address Setting Fixed Tax Rates","title":"Additional Information"},{"location":"Commerce/User-Guide/sales/order-life-cycle/","text":"Order Life Cycle An Order stores data regarding a potential or past transaction. This article provides an overview of the order life cycle from open cart to fulfilled order. Figure 1 . Order Life Cycle Step 1: Products Added to Cart A new order is created when a buyer places products into the cart. At this starting point, the data stored in the order includes the identity and quantity of the products, as well as the account which created it. Step 2: Order Placed After providing information -- such as shipping address and payment method -- to the seller and viewing an order summary, the buyer places the order. Step 3: Order Transmitted When the seller advances an order from pending to transmitted, the order is sent to an external system, such as Microsoft\u2019s Dynamics GP, Oracle\u2019s NetSuite, or SAP. Step 4: Order Fulfilled The seller completes the remaining steps to deliver the ordered products to the buyer. Additional information can be added to the order, such as an updated order status, shipping information, and estimated arrival time. Additional Information Note 1 : Order Workflows may be implemented that alter or add additional steps to the workflow outlined above. Orders Menu Order Information Order Workflows Order Management Statuses Advancing an Order to Transmitted Enabling Order Workflows Approving/Rejecting Orders in Order Workflows","title":"Order Life Cycle"},{"location":"Commerce/User-Guide/sales/order-life-cycle/#order-life-cycle","text":"An Order stores data regarding a potential or past transaction. This article provides an overview of the order life cycle from open cart to fulfilled order. Figure 1 . Order Life Cycle","title":"Order Life Cycle"},{"location":"Commerce/User-Guide/sales/order-life-cycle/#step-1-products-added-to-cart","text":"A new order is created when a buyer places products into the cart. At this starting point, the data stored in the order includes the identity and quantity of the products, as well as the account which created it.","title":"Step 1: Products Added to Cart"},{"location":"Commerce/User-Guide/sales/order-life-cycle/#step-2-order-placed","text":"After providing information -- such as shipping address and payment method -- to the seller and viewing an order summary, the buyer places the order.","title":"Step 2: Order Placed"},{"location":"Commerce/User-Guide/sales/order-life-cycle/#step-3-order-transmitted","text":"When the seller advances an order from pending to transmitted, the order is sent to an external system, such as Microsoft\u2019s Dynamics GP, Oracle\u2019s NetSuite, or SAP.","title":"Step 3: Order Transmitted"},{"location":"Commerce/User-Guide/sales/order-life-cycle/#step-4-order-fulfilled","text":"The seller completes the remaining steps to deliver the ordered products to the buyer. Additional information can be added to the order, such as an updated order status, shipping information, and estimated arrival time.","title":"Step 4: Order Fulfilled"},{"location":"Commerce/User-Guide/sales/order-life-cycle/#additional-information","text":"Note 1 : Order Workflows may be implemented that alter or add additional steps to the workflow outlined above. Orders Menu Order Information Order Workflows Order Management Statuses Advancing an Order to Transmitted Enabling Order Workflows Approving/Rejecting Orders in Order Workflows","title":"Additional Information"},{"location":"DXP/","text":"Welcome to DXP Coming soon!","title":"Welcome to DXP"},{"location":"DXP/#welcome-to-dxp","text":"Coming soon!","title":"Welcome to DXP"},{"location":"DXP-Cloud/","text":"Welcome to DXP Cloud Coming soon!","title":"Welcome to DXP Cloud"},{"location":"DXP-Cloud/#welcome-to-dxp-cloud","text":"Coming soon!","title":"Welcome to DXP Cloud"},{"location":"Other-Projects/","text":"Other Liferay Projects Coming soon!","title":"Other Liferay Projects"},{"location":"Other-Projects/#other-liferay-projects","text":"Coming soon!","title":"Other Liferay Projects"}]}